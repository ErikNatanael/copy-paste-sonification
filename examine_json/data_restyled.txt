 Main.SimpleTextEditor.lambda$onCloseEvent$0(javafx.stage.WindowEvent)-> 3
> Main.SimpleTextEditor.closeAllTabs()-> 2
>> Controllers.FileTabPaneController.closeTabsAndExit()-> 5
>>> Controllers.FileTabPaneController.promptSaveDialog(javafx.scene.control.Tab)-> 12
>>>> javafx.stage.Stage.show()-> 2
>>>>> javafx.stage.Window.show()-> 2
>>>>>> javafx.stage.Window.setShowing(boolean)-> 2
>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>>>> javafx.stage.Window$9.invalidated()-> 18
>>>>>>>>>> javafx.scene.Scene.impl_preferredSize()-> 2
>>>>>>>>>>> javafx.scene.Scene.preferredSize()-> 15
>>>>>>>>>>>> javafx.scene.Scene.doCSSPass()-> 4
>>>>>>>>>>>>> javafx.scene.Node.processCSS()-> 2
>>>>>>>>>>>>>> javafx.scene.Parent.impl_processCSS(javafx.beans.value.WritableValue)-> 5
>>>>>>>>>>>>>>> javafx.scene.control.Control.impl_processCSS(javafx.beans.value.WritableValue)-> 5
>>>>>>>>>>>>>>>> javafx.scene.control.Label.createDefaultSkin()-> 49
>>>>>>>>>>>>>>>>> javafx.scene.control.Label.createDefaultSkin()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.<init>()-> 6
>>>>>>>>>>>>>>>>>> javafx.scene.Node.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 9
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.invalidate()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node, javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node, javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$3.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>(javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>(javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.setDirty()-> 0
>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 4
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 13
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 5
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 12
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 6
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.addToDirtyList(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 4
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$1.invalidated()-> 13
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$500(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateDisabled()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setDisabled(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$8.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$8.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setDisabled(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateDisabled()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisable()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$500(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.usesMirroring()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.computeDerivedDepthTest()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.computeDerivedDepthTest()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getDepthTest()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$600(javafx.scene.Node, boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 7
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$600(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$1.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledProperty()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper, javafx.beans.property.ReadOnlyBooleanWrapper.1)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper, javafx.beans.property.ReadOnlyBooleanWrapper.1)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$700(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$700(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childIncluded(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childIncluded(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.finalizeSubChange(javafx.collections.ListChangeBuilder.SubChange)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.bind(javafx.beans.value.ObservableValue)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.bind(javafx.beans.value.ObservableValue)-> 5
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 5
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$5.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$200(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsFullTextLayout()-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 7
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getLineSpacing()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute.getLineSpacing()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute.getLineSpacing()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getLineSpacing()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute.getTextAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute.getTextAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getWrappingWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsFullTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$200(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$5.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$400(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$400(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$4.invalidated()-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$4.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$1000(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$1.invalidated()-> 5
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.access$100(javafx.scene.shape.Shape)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.checkModeChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.computeMode()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.computeMode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getFill()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getFill()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getStroke()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.checkModeChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.access$100(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$1.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint$1.isMutable(javafx.scene.paint.Paint)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint.acc_isMutable()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint$1.isMutable(javafx.scene.paint.Paint)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase$Listener.<init>(javafx.beans.property.ObjectPropertyBase)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.unbind()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$1.invalidated()-> 5
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.access$100(javafx.scene.shape.Shape)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.checkModeChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.computeMode()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.computeMode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getFill()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getFill()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getStroke()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.checkModeChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.access$100(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$1.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint$1.isMutable(javafx.scene.paint.Paint)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint.acc_isMutable()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint$1.isMutable(javafx.scene.paint.Paint)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.bind(javafx.beans.value.ObservableValue)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.bind(javafx.beans.value.ObservableValue)-> 5
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$5.invalidated()-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$5.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$1000(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase$Listener.<init>(javafx.beans.property.DoublePropertyBase)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.unbind()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.bind(javafx.beans.value.ObservableValue)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.bind(javafx.beans.value.ObservableValue)-> 5
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase$Listener.<init>(javafx.beans.property.BooleanPropertyBase)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$2.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$3200(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$3200(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$2.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.unbind()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.addAll(java.util.Collection)-> 4
>>>>>>>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.addAll(java.util.Collection)-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.finalizeSubChange(javafx.collections.ListChangeBuilder.SubChange)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 4
>>>>>>>>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.findSubChange(int, java.util.List)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SubChange.<init>(int, int, java.util.List, int[], boolean)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkAddRemoveList()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkState()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 3
>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$EffectiveOrientationProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$EffectiveOrientationProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$EffectiveOrientationProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$EffectiveOrientationProperty.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String, double)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$FocusedProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getInternalEventDispatcher()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.initializeInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.mnemonicParsingProperty()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.mnemonicParsingProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.set(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.set(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$3500()-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.set(boolean)-> 2
>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.set(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkState()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.impl_processCSS(javafx.beans.value.WritableValue)-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_processCSS(javafx.beans.value.WritableValue)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.transitionToState(javafx.scene.Node)-> 78
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 9
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.calculateValue(com.sun.javafx.css.CascadingStyle, javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 5
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.calculateValue(com.sun.javafx.css.CascadingStyle, javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleConverter.getInsetsConverter()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 8
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.fontSmoothingTypeProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.fontSmoothingTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.<init>(javafx.scene.text.Text, javafx.scene.text.FontSmoothingType)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.<init>(javafx.scene.text.Text, javafx.scene.text.FontSmoothingType)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$14.<init>(javafx.scene.control.Labeled, javafx.scene.paint.Paint)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$14.<init>(javafx.scene.control.Labeled, javafx.scene.paint.Paint)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.<init>(javafx.scene.text.Text, javafx.scene.text.TextBoundsType)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.<init>(javafx.scene.text.Text, javafx.scene.text.TextBoundsType)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.handleNoStyleFound(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.handleNoStyleFound(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.transitionToState(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 8
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getCssMetaData()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase.getCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase$StyleableProperties.access$000()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getControlCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties.access$2800()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getControlCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.applyStyle(javafx.css.StyleOrigin, Object)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 4
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$1600(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$1600(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.invalidated()-> 4
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$900(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$900(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.applyStyle(javafx.css.StyleOrigin, Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$3.isSettable(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$6.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$6.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$13.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$13.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$5.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$5.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$5.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$7.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$7.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$StyleableProperties$1.isSettable(javafx.scene.control.Control)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$StyleableProperties$1.isSettable(javafx.scene.control.Control)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$9.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$9.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$5.isSettable(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$8.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$12.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$12.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.isSettable(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$8.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$8.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$3.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$3.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$10.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$10.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$4.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$9.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.isSettable(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$10.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$3.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$7.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.CssMetaData.hashCode()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$6.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$2.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.fontSmoothingTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.equals(Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Parent.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.set(Object)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.set(javafx.scene.control.Skin)-> 2
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.invalidated()-> 8
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 4
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 7
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.skinClassNameProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.<init>(javafx.scene.control.Control)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.<init>(javafx.scene.control.Control)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.skinClassNameProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.set(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.set(String)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableStringProperty.set(String)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.invalidated()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableStringProperty.set(String)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.set(String)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.access$002(javafx.scene.control.Control, String)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.access$102(javafx.scene.control.Control, javafx.scene.control.SkinBase)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.access$502(javafx.scene.control.Control, java.util.List)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.set(javafx.scene.control.Skin)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.set(Object)-> 0
>>>>>>>>>>>>>>>> javafx.scene.control.Control.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>>> javafx.scene.control.Control.getSkin()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getSkin()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.impl_processCSS(javafx.beans.value.WritableValue)-> 4
>>>>>>>>>>>>>>>> javafx.scene.control.Control.impl_processCSS(javafx.beans.value.WritableValue)-> 5
>>>>>>>>>>>>>>>>> javafx.scene.Parent.impl_processCSS(javafx.beans.value.WritableValue)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_processCSS(javafx.beans.value.WritableValue)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.transitionToState(javafx.scene.Node)-> 84
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 14
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.calculateValue(com.sun.javafx.css.CascadingStyle, javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 7
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.calculateValue(com.sun.javafx.css.CascadingStyle, javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.isOpaque()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Insets.<init>(double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleConverter.getInsetsConverter()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.handleNoStyleFound(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.calculateValue(com.sun.javafx.css.CascadingStyle, javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 6
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.hashCode()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.to32BitInteger(int, int, int, int)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.calculateValue(com.sun.javafx.css.CascadingStyle, javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleConverter.getInsetsConverter()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Insets.<init>(double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 8
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 4
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundConverter.convert(java.util.Map)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundConverter.convert(java.util.Map)-> 4
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.<init>(javafx.scene.layout.BackgroundFill[], javafx.scene.layout.BackgroundImage[])-> 4
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.<init>(javafx.scene.layout.BackgroundFill[], javafx.scene.layout.BackgroundImage[])-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.computeOpaqueInsets(double, double, boolean, double[])-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.computeOpaqueInsets(double, double, boolean, double[])-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.isOpaque()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.isOpaque()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Insets.<init>(double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundFill.<init>(javafx.scene.paint.Paint, javafx.scene.layout.CornerRadii, javafx.geometry.Insets)-> 4
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.LinearGradient.hashCode()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.LinearGradient.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Stop.hashCode()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Stop.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.hashCode()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.to32BitInteger(int, int, int, int)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundFill.<init>(javafx.scene.paint.Paint, javafx.scene.layout.CornerRadii, javafx.geometry.Insets)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.hashCode()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.to32BitInteger(int, int, int, int)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Insets.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundConverter.convert(java.util.Map)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.css.CssMetaData.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundConverter.convert(java.util.Map)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.alignmentProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.alignmentProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$1.<init>(javafx.scene.control.Labeled, javafx.geometry.Pos)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$1.<init>(javafx.scene.control.Labeled, javafx.geometry.Pos)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.contentDisplayProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.contentDisplayProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$11.<init>(javafx.scene.control.Labeled, javafx.scene.control.ContentDisplay)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$11.<init>(javafx.scene.control.Labeled, javafx.scene.control.ContentDisplay)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.handleNoStyleFound(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$14.<init>(javafx.scene.control.Labeled, javafx.scene.paint.Paint)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$14.<init>(javafx.scene.control.Labeled, javafx.scene.paint.Paint)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.fontSmoothingTypeProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.fontSmoothingTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.<init>(javafx.scene.text.Text, javafx.scene.text.FontSmoothingType)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.<init>(javafx.scene.text.Text, javafx.scene.text.FontSmoothingType)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.<init>(javafx.scene.text.Text, javafx.scene.text.TextBoundsType)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.<init>(javafx.scene.text.Text, javafx.scene.text.TextBoundsType)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.css.CssMetaData.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.transitionToState(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.applyStyle(javafx.css.StyleOrigin, Object)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 6
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.invalidated()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$900(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$900(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$3.invalidated()-> 6
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.fireValueChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.fireValueChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$200(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.updateSnappedInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.updateSnappedInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$200(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$700(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$700(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$3.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$800(javafx.scene.layout.Region, com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$800(javafx.scene.layout.Region, com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$902(javafx.scene.layout.Region, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$1600(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$1600(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$2.invalidated()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.fireValueChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$200(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.updateSnappedInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.updateSnappedInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$200(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.fireValueChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$2.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Insets.equals(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.applyStyle(javafx.css.StyleOrigin, Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 8
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 5
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getCssMetaData()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getControlCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties.access$2800()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getControlCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase.getCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase$StyleableProperties.access$000()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.SkinBase.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.css.CssMetaData.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 5
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.contentDisplayProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.contentDisplayProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$11.<init>(javafx.scene.control.Labeled, javafx.scene.control.ContentDisplay)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$11.<init>(javafx.scene.control.Labeled, javafx.scene.control.ContentDisplay)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$14.<init>(javafx.scene.control.Labeled, javafx.scene.paint.Paint)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$14.<init>(javafx.scene.control.Labeled, javafx.scene.paint.Paint)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$9.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$9.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.isSettable(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$5.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$5.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$2.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$3.isSettable(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.alignmentProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$1.<init>(javafx.scene.control.Labeled, javafx.geometry.Pos)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$1.<init>(javafx.scene.control.Labeled, javafx.geometry.Pos)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.alignmentProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$2.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$7.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.isSettable(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$13.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$13.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$7.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$7.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$3.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$3.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$10.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$10.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$StyleableProperties$1.isSettable(javafx.scene.control.Control)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$StyleableProperties$1.isSettable(javafx.scene.control.Control)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$8.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$8.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$6.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$6.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.getStyleableProperty(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$12.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$12.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$5.isSettable(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.isSettable(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.isSettable(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$3.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$4.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$5.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$8.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$9.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$10.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.fontSmoothingTypeProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.<init>(javafx.scene.text.Text, javafx.scene.text.FontSmoothingType)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$8.<init>(javafx.scene.text.Text, javafx.scene.text.FontSmoothingType)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.fontSmoothingTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$6.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$StyleableProperties$6.isSettable(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.<init>(javafx.scene.text.Text, javafx.scene.text.TextBoundsType)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$6.<init>(javafx.scene.text.Text, javafx.scene.text.TextBoundsType)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$StyleableProperties$8.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.geometry.Insets.equals(Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.equals(Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.equals(Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Button.createDefaultSkin()-> 58
>>>>>>>>>>>>>>>>>> javafx.scene.control.Button.createDefaultSkin()-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 13
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 12
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.addToDirtyList(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$1.invalidated()-> 13
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$500(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateDisabled()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setDisabled(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$8.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$8.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setDisabled(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateDisabled()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisable()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$500(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$1.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.usesMirroring()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$600(javafx.scene.Node, boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 7
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$600(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledProperty()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper, javafx.beans.property.ReadOnlyBooleanWrapper.1)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper, javafx.beans.property.ReadOnlyBooleanWrapper.1)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.computeDerivedDepthTest()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.computeDerivedDepthTest()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getDepthTest()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$700(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.access$700(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childIncluded(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childIncluded(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.finalizeSubChange(javafx.collections.ListChangeBuilder.SubChange)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.bind(javafx.beans.value.ObservableValue)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.bind(javafx.beans.value.ObservableValue)-> 5
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 5
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$5.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$200(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsFullTextLayout()-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 7
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute.getTextAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute.getTextAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getLineSpacing()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getLineSpacing()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute.getLineSpacing()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute.getLineSpacing()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getWrappingWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsFullTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$200(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$5.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$400(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$400(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$1.invalidated()-> 5
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.access$100(javafx.scene.shape.Shape)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.checkModeChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.computeMode()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getFill()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getFill()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.computeMode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getStroke()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.checkModeChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.access$100(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$1.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint$1.isMutable(javafx.scene.paint.Paint)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint.acc_isMutable()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint$1.isMutable(javafx.scene.paint.Paint)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$4.invalidated()-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$4.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$1000(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase$Listener.<init>(javafx.beans.property.ObjectPropertyBase)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.unbind()-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.addAll(java.util.Collection)-> 4
>>>>>>>>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 4
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.findSubChange(int, java.util.List)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SubChange.<init>(int, int, java.util.List, int[], boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkAddRemoveList()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkState()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.addAll(java.util.Collection)-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.finalizeSubChange(javafx.collections.ListChangeBuilder.SubChange)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.<init>()-> 6
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$3.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 4
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 9
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.invalidate()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node, javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node, javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>(javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>(javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setDirty()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.bind(javafx.beans.value.ObservableValue)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.bind(javafx.beans.value.ObservableValue)-> 5
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$5.invalidated()-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$5.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$700(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$1000(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.unbind()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase$Listener.<init>(javafx.beans.property.DoublePropertyBase)-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.input.KeyCombination$Modifier.toString()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.bind(javafx.beans.value.ObservableValue)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.bind(javafx.beans.value.ObservableValue)-> 5
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$2.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$TextAttribute$2.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$3200(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$3200(javafx.scene.text.Text, com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.unbind()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase$Listener.<init>(javafx.beans.property.BooleanPropertyBase)-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.bind(javafx.beans.value.ObservableValue)-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$1.invalidated()-> 5
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape$1.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.access$100(javafx.scene.shape.Shape)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.checkModeChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.computeMode()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.computeMode()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getFill()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getFill()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.getStroke()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.checkModeChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.access$100(javafx.scene.shape.Shape)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint$1.isMutable(javafx.scene.paint.Paint)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint$1.isMutable(javafx.scene.paint.Paint)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Paint.acc_isMutable()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.input.KeyCodeCombination.hashCode()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.input.KeyCodeCombination.hashCode()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.input.KeyCombination.hashCode()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$EffectiveOrientationProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$EffectiveOrientationProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$EffectiveOrientationProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$EffectiveOrientationProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$FocusedProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Button.defaultButtonProperty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Button.defaultButtonProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Button$1.<init>(javafx.scene.control.Button, boolean)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Button$1.<init>(javafx.scene.control.Button, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$FocusedProperty.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String, double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.input.KeyCodeCombination.equals(Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getInternalEventDispatcher()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.initializeInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Button.cancelButtonProperty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Button.cancelButtonProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Button$2.<init>(javafx.scene.control.Button, boolean)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Button$2.<init>(javafx.scene.control.Button, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.set(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.set(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.initializeInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$3500()-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.set(boolean)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.set(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.mnemonicParsingProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textFillProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkState()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.contentDisplayProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.alignmentProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.set(Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.set(javafx.scene.control.Skin)-> 2
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.invalidated()-> 8
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 7
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 5
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.skinClassNameProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.<init>(javafx.scene.control.Control)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.<init>(javafx.scene.control.Control)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.skinClassNameProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.set(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.set(String)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableStringProperty.set(String)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.invalidated()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableStringProperty.set(String)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.set(String)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$4.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.access$002(javafx.scene.control.Control, String)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.access$102(javafx.scene.control.Control, javafx.scene.control.SkinBase)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.access$502(javafx.scene.control.Control, java.util.List)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.set(javafx.scene.control.Skin)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Control$1.set(Object)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Control.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getSkin()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getSkin()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.impl_processCSS(javafx.beans.value.WritableValue)-> 4
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.transitionToState(javafx.scene.Node)-> 46
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 6
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 5
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.calculateValue(com.sun.javafx.css.CascadingStyle, javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 5
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 4
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveRef(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.resolveLookups(javafx.css.Styleable, com.sun.javafx.css.ParsedValueImpl, com.sun.javafx.css.StyleMap, java.util.Set, javafx.beans.property.ObjectProperty, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.calculateValue(com.sun.javafx.css.CascadingStyle, javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.css.StyleConverter.getInsetsConverter()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getInheritedStyle(javafx.css.Styleable, String)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getInheritedStyle(javafx.css.Styleable, String)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.handleNoStyleFound(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundConverter.convert(java.util.Map)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundConverter.convert(java.util.Map)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.<init>(javafx.scene.layout.BackgroundFill[], javafx.scene.layout.BackgroundImage[])-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.computeOpaqueInsets(double, double, boolean, double[])-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.computeOpaqueInsets(double, double, boolean, double[])-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.isOpaque()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Background.<init>(javafx.scene.layout.BackgroundFill[], javafx.scene.layout.BackgroundImage[])-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.isOpaque()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Insets.<init>(double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundFill.<init>(javafx.scene.paint.Paint, javafx.scene.layout.CornerRadii, javafx.geometry.Insets)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.hashCode()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.paint.Color.to32BitInteger(int, int, int, int)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundFill.<init>(javafx.scene.paint.Paint, javafx.scene.layout.CornerRadii, javafx.geometry.Insets)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Insets.hashCode()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundConverter.convert(java.util.Map)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.BackgroundConverter.convert(java.util.Map)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookup(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.getStyleableProperty(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.handleNoStyleFound(javafx.css.Styleable, javafx.css.CssMetaData, com.sun.javafx.css.StyleMap, java.util.Set, javafx.css.Styleable, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.transitionToState(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 6
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyle(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, java.util.Set)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupFont(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, com.sun.javafx.css.CalculatedValue)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.lookupInheritedFontProperty(javafx.css.Styleable, String, com.sun.javafx.css.StyleMap, int, com.sun.javafx.css.CascadingStyle)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.applyStyle(javafx.css.StyleOrigin, Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$3.invalidated()-> 6
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$3.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$800(javafx.scene.layout.Region, com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$800(javafx.scene.layout.Region, com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.fireValueChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$200(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.updateSnappedInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.updateSnappedInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$200(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.fireValueChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$700(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$700(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$902(javafx.scene.layout.Region, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.applyStyle(javafx.css.StyleOrigin, Object)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$1.isSettable(javafx.scene.layout.VBox)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$1.isSettable(javafx.scene.layout.VBox)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$3.isSettable(javafx.scene.layout.VBox)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$3.isSettable(javafx.scene.layout.VBox)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$6.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$15.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$7.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$1.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$4.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$13.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getTransitionStates(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$6.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$2.isSettable(javafx.scene.layout.VBox)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$2.isSettable(javafx.scene.layout.VBox)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$5.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$9.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$7.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$14.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$4.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$8.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$5.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$9.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$2.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$10.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$12.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$11.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$12.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$StyleableProperties$11.isSettable(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$2.isSettable(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$StyleableProperties$3.getStyleableProperty(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.css.CssMetaData.hashCode()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getCssMetaData()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties.access$600()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getCachedFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 5
>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 5
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 11
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 4
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$6.<init>(javafx.scene.control.Labeled, javafx.scene.text.Font)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$6.<init>(javafx.scene.control.Labeled, javafx.scene.text.Font)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox$StyleableProperties.access$600()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$6.<init>(javafx.scene.control.Labeled, javafx.scene.text.Font)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$6.<init>(javafx.scene.control.Labeled, javafx.scene.text.Font)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.fontProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Font.getDefault()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.scene.control.Labeled)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties$1.getStyleableProperty(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getChildren()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$700(javafx.scene.CssStyleHelper.CacheContainer, javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.getStyleMap(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.isUserSetFont(javafx.css.Styleable)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.access$102(javafx.scene.CssStyleHelper.CacheContainer, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getId()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getChildren()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.impl_processCSS(javafx.beans.value.WritableValue)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.processCSS()-> 0
>>>>>>>>>>>>> javafx.scene.Scene.doCSSPass()-> 0
>>>>>>>>>>>>> javafx.scene.Node.impl_clearDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>> javafx.scene.Scene.resizeRootToPreferredSize(javafx.scene.Parent)-> 5
>>>>>>>>>>>>> javafx.scene.Scene.getPreferredWidth(javafx.scene.Parent, double, double)-> 5
>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.computePrefWidth(double)-> 5
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxPrefAreaWidth(java.util.List, javafx.util.Callback)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxAreaWidth(java.util.List, javafx.util.Callback, double[], boolean, boolean)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaWidth(javafx.scene.Node, double, javafx.geometry.Insets, double, boolean)-> 6
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computeMinWidth(double)-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computeContentWidth(java.util.List, double, boolean)-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAreaWidths(java.util.List, double, boolean)-> 6
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildMinAreaWidth(javafx.scene.Node, double, javafx.geometry.Insets, double, boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minWidth(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMinWidth(double)-> 7
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMinWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildMinAreaWidth(javafx.scene.Node, double, javafx.geometry.Insets, double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.shouldFillHeight()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.shouldFillHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.isFillHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAreaWidths(java.util.List, double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getTempArray(int)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMinBaselineComplement()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMinBaselineComplement()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computeContentWidth(java.util.List, double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getSpacing()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getSpacing()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.sum(double[], int)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computeMinWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMinWidth(double)-> 7
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMinWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinWidth()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computePrefWidth(double)-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computeContentWidth(java.util.List, double, boolean)-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAreaWidths(java.util.List, double, boolean)-> 6
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaWidth(javafx.scene.Node, double, javafx.geometry.Insets, double, boolean)-> 6
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computePrefWidth(double)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computePrefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaWidth(javafx.scene.Node, double, javafx.geometry.Insets, double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAreaWidths(java.util.List, double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getPrefBaselineComplement()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getPrefBaselineComplement()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.shouldFillHeight()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.shouldFillHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.isFillHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getTempArray(int)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computeContentWidth(java.util.List, double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.sum(double[], int)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getSpacing()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getSpacing()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computePrefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computePrefWidth(double)-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computePrefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxWidth()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaWidth(javafx.scene.Node, double, javafx.geometry.Insets, double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxAreaWidth(java.util.List, javafx.util.Callback, double[], boolean, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxPrefAreaWidth(java.util.List, javafx.util.Callback)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.computePrefWidth(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getPreferredWidth(javafx.scene.Parent, double, double)-> 0
>>>>>>>>>>>>>> javafx.scene.Node.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 3
>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinWidth()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 3
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxWidth()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 0
>>>>>>>>>>>>> javafx.scene.Scene.getPreferredHeight(javafx.scene.Parent, double, double)-> 5
>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.computePrefHeight(double)-> 5
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.computeContentHeight(java.util.List, double, boolean)-> 5
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getAreaHeights(java.util.List, double, boolean)-> 5
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaHeight(javafx.scene.Node, double, javafx.geometry.Insets, double)-> 10
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computeMinHeight(double)-> 6
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxMinAreaHeight(java.util.List, javafx.util.Callback, javafx.geometry.VPos)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxAreaHeight(java.util.List, javafx.util.Callback, double[], javafx.geometry.VPos, boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildMinAreaHeight(javafx.scene.Node, double, javafx.geometry.Insets, double)-> 5
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minHeight(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMinHeight(double)-> 6
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMinHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildMinAreaHeight(javafx.scene.Node, double, javafx.geometry.Insets, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.isResizable()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxAreaHeight(java.util.List, javafx.util.Callback, double[], javafx.geometry.VPos, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxMinAreaHeight(java.util.List, javafx.util.Callback, javafx.geometry.VPos)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computeMinHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMinHeight(double)-> 6
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMinHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinHeight()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computePrefHeight(double)-> 6
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxPrefAreaHeight(java.util.List, javafx.util.Callback, javafx.geometry.VPos)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxAreaHeight(java.util.List, javafx.util.Callback, double[], javafx.geometry.VPos, boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaHeight(javafx.scene.Node, double, javafx.geometry.Insets, double)-> 8
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computePrefHeight(double)-> 8
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computePrefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaHeight(javafx.scene.Node, double, javafx.geometry.Insets, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.isResizable()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxAreaHeight(java.util.List, javafx.util.Callback, double[], javafx.geometry.VPos, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxPrefAreaHeight(java.util.List, javafx.util.Callback, javafx.geometry.VPos)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.computePrefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computePrefHeight(double)-> 8
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computePrefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 4
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxHeight()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaHeight(javafx.scene.Node, double, javafx.geometry.Insets, double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getContentBias()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.isResizable()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.isResizable()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getAreaHeights(java.util.List, double, boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getTempArray(int)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.isFillWidth()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.isFillWidth()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.computeContentHeight(java.util.List, double, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getSpacing()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getSpacing()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.sum(double[], int)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.computePrefHeight(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getPreferredHeight(javafx.scene.Parent, double, double)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 3
>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinHeight()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 3
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxHeight()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 0
>>>>>>>>>>>>>> javafx.scene.Node.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>> javafx.scene.layout.VBox.getContentBias()-> 4
>>>>>>>>>>>>>> javafx.scene.layout.HBox.getContentBias()-> 3
>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getContentBias()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>> javafx.scene.layout.VBox.getContentBias()-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 2
>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 3
>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 2
>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 6
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 2
>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 6
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 0
>>>>>>>>>>>>> javafx.scene.Scene.resizeRootToPreferredSize(javafx.scene.Parent)-> 0
>>>>>>>>>>>> javafx.scene.Scene.doLayoutPass()-> 3
>>>>>>>>>>>>> javafx.scene.Parent.layout()-> 4
>>>>>>>>>>>>>> javafx.scene.Parent.layout()-> 5
>>>>>>>>>>>>>>> javafx.scene.control.Control.layoutChildren()-> 20
>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(Object)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 3
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$2.invalidated()-> 8
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$200(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsFullTextLayout()-> 5
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsFullTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getText()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$200(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$2.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.setImpl_caretPosition(int)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.removeAccessible(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.setImpl_caretBias(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.setImpl_selectionEnd(int)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.setImpl_selectionStart(int)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>> javafx.scene.control.Control.layoutChildren()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_computeLayoutBounds()-> 8
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getLogicalBounds()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getLogicalBounds()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_computeLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getYAdjustment(com.sun.javafx.geom.BaseBounds)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getYAdjustment(com.sun.javafx.geom.BaseBounds)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextOrigin()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getWrappingWidth()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getWrappingWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Bounds.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getX()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getY()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.relocate(double, double)-> 4
>>>>>>>>>>>>>>>>> javafx.scene.Node.relocate(double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutY(double)-> 3
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutYProperty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutYProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.<init>(javafx.scene.Node, double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.<init>(javafx.scene.Node, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutY(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutX(double)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutXProperty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutXProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.<init>(javafx.scene.Node, double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.<init>(javafx.scene.Node, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutX(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.HBox.layoutChildren()-> 14
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.layoutInArea(javafx.scene.Node, double, double, double, double, double, javafx.geometry.Insets, boolean, boolean, javafx.geometry.HPos, javafx.geometry.VPos)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.layoutInArea(javafx.scene.Node, double, double, double, double, double, javafx.geometry.Insets, boolean, boolean, javafx.geometry.HPos, javafx.geometry.VPos, boolean)-> 7
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 5
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$6.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$1700(javafx.scene.layout.Region, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 6
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$1700(javafx.scene.layout.Region, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$6.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$7.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$1800(javafx.scene.layout.Region, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 6
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$1800(javafx.scene.layout.Region, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$7.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedNodeSizeWithBias(javafx.scene.Node, double, double, boolean, boolean, com.sun.javafx.geom.Vec2d)-> 7
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxHeight()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedNodeSizeWithBias(javafx.scene.Node, double, double, boolean, boolean, com.sun.javafx.geom.Vec2d)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinHeight()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxWidth()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinWidth()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.position(javafx.scene.Node, double, double, double, double, double, double, double, double, double, javafx.geometry.HPos, javafx.geometry.VPos, boolean)-> 6
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 4
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Bounds.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.position(javafx.scene.Node, double, double, double, double, double, double, double, double, double, javafx.geometry.HPos, javafx.geometry.VPos, boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.relocate(double, double)-> 4
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutX(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutXProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.<init>(javafx.scene.Node, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.<init>(javafx.scene.Node, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutXProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutX(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutY(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutYProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.<init>(javafx.scene.Node, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.<init>(javafx.scene.Node, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutYProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutY(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.relocate(double, double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeYOffset(double, double, javafx.geometry.VPos)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeXOffset(double, double, javafx.geometry.HPos)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapPosition(double, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.layoutInArea(javafx.scene.Node, double, double, double, double, double, javafx.geometry.Insets, boolean, boolean, javafx.geometry.HPos, javafx.geometry.VPos, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.isResizable()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.layoutInArea(javafx.scene.Node, double, double, double, double, double, javafx.geometry.Insets, boolean, boolean, javafx.geometry.HPos, javafx.geometry.VPos)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAreaWidths(java.util.List, double, boolean)-> 8
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaWidth(javafx.scene.Node, double, javafx.geometry.Insets, double, boolean)-> 8
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaWidth(javafx.scene.Node, double, javafx.geometry.Insets, double, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxWidth()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinWidth()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.isResizable()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAreaWidths(java.util.List, double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getPrefBaselineComplement()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getTempArray(int)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.shouldFillHeight()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.isFillHeight()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.shouldFillHeight()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.layoutChildren()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.adjustAreaWidths(java.util.List, double[][], double, double)-> 5
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getSpacing()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getSpacing()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.adjustAreaWidths(java.util.List, double[][], double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.sum(double[], int)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeXOffset(double, double, javafx.geometry.HPos)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getSpacing()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getSpacing()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.shouldFillHeight()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.shouldFillHeight()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.isFillHeight()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.layout()-> 3
>>>>>>>>>>>>>>>> javafx.scene.control.Control.layoutChildren()-> 20
>>>>>>>>>>>>>>>>> javafx.scene.control.Control.layoutChildren()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$2.invalidated()-> 8
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$200(javafx.scene.text.Text)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsFullTextLayout()-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 4
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_notifyLayoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.shape.Shape.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.needsFullTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getText()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getText()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFontInternal()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.access$200(javafx.scene.text.Text)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text$2.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.removeAccessible(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.setImpl_selectionStart(int)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.setImpl_selectionEnd(int)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.setImpl_caretPosition(int)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.setImpl_caretBias(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.relocate(double, double)-> 4
>>>>>>>>>>>>>>>>>> javafx.scene.Node.relocate(double, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutX(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutXProperty()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.<init>(javafx.scene.Node, double)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.<init>(javafx.scene.Node, double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutXProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutX(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutY(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutYProperty()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.<init>(javafx.scene.Node, double)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.<init>(javafx.scene.Node, double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutYProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutY(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_computeLayoutBounds()-> 8
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getLogicalBounds()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getLogicalBounds()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.impl_computeLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getYAdjustment(com.sun.javafx.geom.BaseBounds)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getYAdjustment(com.sun.javafx.geom.BaseBounds)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getTextOrigin()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Bounds.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getX()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getY()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getWrappingWidth()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getWrappingWidth()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getFont()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.getValue()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.getBoundsType()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.text.Text.boundsTypeProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.layout()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.layout()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.VBox.layoutChildren()-> 14
>>>>>>>>>>>>>>> javafx.scene.layout.Region.layoutInArea(javafx.scene.Node, double, double, double, double, double, javafx.geometry.Insets, boolean, boolean, javafx.geometry.HPos, javafx.geometry.VPos)-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.layoutInArea(javafx.scene.Node, double, double, double, double, double, javafx.geometry.Insets, boolean, boolean, javafx.geometry.HPos, javafx.geometry.VPos, boolean)-> 8
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.position(javafx.scene.Node, double, double, double, double, double, double, double, double, double, javafx.geometry.HPos, javafx.geometry.VPos, boolean)-> 6
>>>>>>>>>>>>>>>>>> javafx.scene.Node.relocate(double, double)-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutX(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutXProperty()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutXProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.<init>(javafx.scene.Node, double)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$10.<init>(javafx.scene.Node, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutX(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutY(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutYProperty()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.layoutYProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.<init>(javafx.scene.Node, double)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.<init>(javafx.scene.Node, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$11.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.setLayoutY(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.relocate(double, double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 4
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.geometry.Bounds.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.position(javafx.scene.Node, double, double, double, double, double, double, double, double, double, javafx.geometry.HPos, javafx.geometry.VPos, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeXOffset(double, double, javafx.geometry.HPos)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapPosition(double, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeYOffset(double, double, javafx.geometry.VPos)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$6.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$1700(javafx.scene.layout.Region, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 6
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$1700(javafx.scene.layout.Region, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$6.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 5
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 6
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$7.invalidated()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$1800(javafx.scene.layout.Region, double)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 6
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$1800(javafx.scene.layout.Region, double)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$7.invalidated()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 6
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 3
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.childBoundsChanged(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.markDirtyLayoutBranch()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedNodeSizeWithBias(javafx.scene.Node, double, double, boolean, boolean, com.sun.javafx.geom.Vec2d)-> 9
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedNodeSizeWithBias(javafx.scene.Node, double, double, boolean, boolean, com.sun.javafx.geom.Vec2d)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinWidth()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minWidth(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxWidth()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxWidth(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxHeight()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefWidth()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefWidth(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinHeight()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getContentBias()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.layoutInArea(javafx.scene.Node, double, double, double, double, double, javafx.geometry.Insets, boolean, boolean, javafx.geometry.HPos, javafx.geometry.VPos, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Control.isResizable()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.isResizable()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.layoutInArea(javafx.scene.Node, double, double, double, double, double, javafx.geometry.Insets, boolean, boolean, javafx.geometry.HPos, javafx.geometry.VPos)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getAreaHeights(java.util.List, double, boolean)-> 7
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaHeight(javafx.scene.Node, double, javafx.geometry.Insets, double)-> 10
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeChildPrefAreaHeight(javafx.scene.Node, double, javafx.geometry.Insets, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 4
>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.computeMaxHeight(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.maxHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMaxHeight()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeMaxHeight(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.isWrapText()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getContentBias()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.minHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getMinHeight()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.minHeight(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPrefHeight()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.prefHeight(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSize(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getContentBias()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Control.isResizable()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.boundedSize(double, double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.isResizable()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getAreaHeights(java.util.List, double, boolean)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getTempArray(int)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.isFillWidth()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.isFillWidth()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.layoutChildren()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.adjustAreaHeights(java.util.List, double[][], double, double)-> 5
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.adjustAreaHeights(java.util.List, double[][], double, double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getSpacing()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getSpacing()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.sum(double[], int)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getAlignmentInternal()-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getAlignment()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getAlignment()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getAlignmentInternal()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.computeYOffset(double, double, javafx.geometry.VPos)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.snapSpace(double, boolean)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getMargin(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getMargin(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.hasProperties()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getConstraint(javafx.scene.Node, Object)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getSpacing()-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getSpacing()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.getManagedChildren()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.isFillWidth()-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.isFillWidth()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.layout()-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>> javafx.scene.Scene.doLayoutPass()-> 0
>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>> javafx.scene.Scene.preferredSize()-> 0
>>>>>>>>>>>> javafx.scene.Scene.setWidth(double)-> 3
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>> javafx.scene.Scene$5.invalidated()-> 11
>>>>>>>>>>>>>>>> javafx.scene.Camera.setViewWidth(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setNeedsRepaint()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Camera.setViewWidth(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.resizeRootOnSceneSizeChange(double, double)-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Scene.resizeRootOnSceneSizeChange(double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getCamera()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene$5.invalidated()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.isResizable()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutX()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getTranslateX()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>> javafx.scene.Scene.setWidth(double)-> 0
>>>>>>>>>>>>> javafx.scene.Scene.widthPropertyImpl()-> 0
>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>> javafx.scene.Scene.setHeight(double)-> 3
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>> javafx.scene.Scene$6.invalidated()-> 10
>>>>>>>>>>>>>>>> javafx.scene.Camera.setViewHeight(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setNeedsRepaint()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Camera.setViewHeight(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.resizeRootOnSceneSizeChange(double, double)-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.resizeRootOnSceneSizeChange(double, double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene$6.invalidated()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.isResizable()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutY()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getTranslateY()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getCamera()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>> javafx.scene.Scene.heightPropertyImpl()-> 0
>>>>>>>>>>>>> javafx.scene.Scene.setHeight(double)-> 0
>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 2
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 4
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 2
>>>>>>>>>>>>>>>>>> javafx.geometry.Bounds.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>> javafx.scene.Scene.getWidth()-> 2
>>>>>>>>>>>>> javafx.scene.Scene.getWidth()-> 0
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>> javafx.scene.layout.Region.isResizable()-> 0
>>>>>>>>>>>> javafx.scene.Node.getLayoutX()-> 0
>>>>>>>>>>>> javafx.scene.Node.getTranslateX()-> 0
>>>>>>>>>>>> javafx.scene.Node.getLayoutY()-> 0
>>>>>>>>>>>> javafx.scene.Node.getTranslateY()-> 0
>>>>>>>>>>>> javafx.scene.Scene.getHeight()-> 2
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.scene.Scene.getHeight()-> 0
>>>>>>>>>>> javafx.scene.Scene.impl_preferredSize()-> 0
>>>>>>>>>> javafx.scene.Scene.impl_initPeer()-> 15
>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 8
>>>>>>>>>>>> javafx.scene.ParallelCamera.<init>()-> 2
>>>>>>>>>>>>> javafx.scene.Camera.<init>()-> 6
>>>>>>>>>>>>>> javafx.scene.Node.<init>()-> 6
>>>>>>>>>>>>>>> javafx.scene.Node.<init>()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$12.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>(javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.<init>(javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$12.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node, javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.<init>(javafx.scene.Node, javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 4
>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 9
>>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.invalidate()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$3.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.setDirty()-> 0
>>>>>>>>>>>>>> javafx.scene.Camera.<init>()-> 0
>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty.addListener(javafx.beans.InvalidationListener)-> 3
>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.get()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.getInternalValue()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty.computeTransform(javafx.scene.transform.Transform)-> 5
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateLocalToParentTransform()-> 12
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasMirroring()-> 3
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasMirroring()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getAutomaticOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScaleX()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScaleX()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.getScaleX()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_hasTransforms()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_hasTransforms()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.hasTransforms()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScaleZ()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScaleZ()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.getScaleZ()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getRotate()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getRotate()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.getRotate()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getTranslateX()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getTranslateX()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.getTranslateX()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getTranslateY()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getTranslateY()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.getTranslateY()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScaleY()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScaleY()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.getScaleY()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutX()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getTranslateZ()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getTranslateZ()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.getTranslateZ()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutY()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.localToParentTransformProperty()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$1.<init>(javafx.scene.Node.NodeTransformation)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.<init>(javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.<init>(javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$1.<init>(javafx.scene.Node.NodeTransformation)-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.localToParentTransformProperty()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.getInternalValue()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$1.computeTransform(javafx.scene.transform.Transform)-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$1.computeTransform(javafx.scene.transform.Transform)-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.getInternalValue()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$1.validityKnown()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty.computeTransform(javafx.scene.transform.Transform)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.getInternalValue()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty.validityKnown()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.incListenerReasons()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.incListenerReasons()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.localToSceneTransformProperty()-> 3
>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.localToSceneTransformProperty()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty.<init>(javafx.scene.Node.NodeTransformation)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.<init>(javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.<init>(javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation$LocalToSceneTransformProperty.<init>(javafx.scene.Node.NodeTransformation)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.localToSceneTransformProperty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getNodeTransformation()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeTransformation()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.<init>(javafx.scene.Node, javafx.scene.Node.1)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.<init>(javafx.scene.Node, javafx.scene.Node.1)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.localToSceneTransformProperty()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 2
>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.getValue()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>> javafx.scene.ParallelCamera.<init>()-> 0
>>>>>>>>>>>> javafx.scene.Camera.setOwnerScene(javafx.scene.Scene)-> 2
>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 2
>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 3
>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.setDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.setNeedsRepaint()-> 0
>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 0
>>>>>>>>>>>>> javafx.scene.Camera.setOwnerScene(javafx.scene.Scene)-> 0
>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 0
>>>>>>>>>>>> javafx.scene.Camera.setViewWidth(double)-> 2
>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 3
>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 3
>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.setNeedsRepaint()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.setDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>> javafx.scene.Camera.setViewWidth(double)-> 0
>>>>>>>>>>>> javafx.scene.Camera.setViewHeight(double)-> 2
>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 3
>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 3
>>>>>>>>>>>>>>>> javafx.scene.Scene.setNeedsRepaint()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene.setDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>> javafx.scene.Camera.setViewHeight(double)-> 0
>>>>>>>>>>>> javafx.scene.Scene.getCamera()-> 0
>>>>>>>>>>>> javafx.scene.Scene.getWidth()-> 0
>>>>>>>>>>>> javafx.scene.Scene.getHeight()-> 0
>>>>>>>>>>> javafx.scene.Camera.impl_updatePeer()-> 10
>>>>>>>>>>>> javafx.scene.Node.impl_updatePeer()-> 10
>>>>>>>>>>>>> javafx.scene.Node.impl_updatePeer()-> 0
>>>>>>>>>>>>> javafx.scene.Node.impl_getPeer()-> 2
>>>>>>>>>>>>>> javafx.scene.ParallelCamera.impl_createPeer()-> 3
>>>>>>>>>>>>>>> javafx.scene.ParallelCamera.impl_createPeer()-> 0
>>>>>>>>>>>>>>> javafx.scene.Camera.getNearClip()-> 0
>>>>>>>>>>>>>>> javafx.scene.Camera.getFarClip()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_getPeer()-> 0
>>>>>>>>>>>>> javafx.scene.Node.isCache()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getCacheHint()-> 0
>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>> javafx.scene.Node.getOpacity()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getBlendMode()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getEffect()-> 0
>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>> javafx.scene.Camera.getProjViewTransform()-> 4
>>>>>>>>>>>>> javafx.scene.Camera.getSceneToLocalTransform()-> 2
>>>>>>>>>>>>>> javafx.scene.Camera.getSceneToLocalTransform()-> 0
>>>>>>>>>>>>>> javafx.scene.Camera.getCameraTransform()-> 0
>>>>>>>>>>>>> javafx.scene.Camera.getProjViewTransform()-> 0
>>>>>>>>>>>>> javafx.scene.ParallelCamera.computeProjectionTransform(com.sun.javafx.geom.transform.GeneralTransform3D)-> 0
>>>>>>>>>>>>> javafx.scene.ParallelCamera.computeViewTransform(com.sun.javafx.geom.transform.Affine3D)-> 0
>>>>>>>>>>>> javafx.scene.Camera.impl_updatePeer()-> 0
>>>>>>>>>>>> javafx.scene.Camera.getCameraTransform()-> 2
>>>>>>>>>>>>> javafx.scene.Node.getLocalToSceneTransform()-> 3
>>>>>>>>>>>>>> javafx.scene.Node.getLocalToSceneTransform()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.localToSceneTransformProperty()-> 3
>>>>>>>>>>>>>>> javafx.scene.Node.localToSceneTransformProperty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getNodeTransformation()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$NodeTransformation.localToSceneTransformProperty()-> 0
>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.get()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.get()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.getInternalValue()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$LazyTransformProperty.get()-> 0
>>>>>>>>>>>>> javafx.scene.Camera.getCameraTransform()-> 0
>>>>>>>>>>>> javafx.scene.ParallelCamera.computePosition(com.sun.javafx.geom.Vec3d)-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_getPeer()-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>> javafx.scene.Camera.getNearClip()-> 0
>>>>>>>>>>>> javafx.scene.Camera.getFarClip()-> 0
>>>>>>>>>>> javafx.scene.Scene.impl_initPeer()-> 0
>>>>>>>>>>> javafx.scene.Scene$ScenePeerPaintListener.<init>(javafx.scene.Scene, javafx.scene.Scene.1)-> 2
>>>>>>>>>>>> javafx.scene.Scene$ScenePeerPaintListener.<init>(javafx.scene.Scene, javafx.scene.Scene.1)-> 0
>>>>>>>>>>>> javafx.scene.Scene$ScenePeerPaintListener.<init>(javafx.scene.Scene)-> 0
>>>>>>>>>>> javafx.scene.Node.impl_getPeer()-> 2
>>>>>>>>>>>> javafx.scene.Node.impl_getPeer()-> 0
>>>>>>>>>>>> javafx.scene.layout.Region.impl_createPeer()-> 0
>>>>>>>>>>> javafx.application.Platform.isSupported(javafx.application.ConditionalFeature)-> 0
>>>>>>>>>>> javafx.scene.Scene.getFill()-> 2
>>>>>>>>>>>> javafx.scene.Scene.getFill()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>> javafx.scene.Scene.impl_setAllowPGAccess(boolean)-> 0
>>>>>>>>>>> javafx.scene.Scene$ScenePeerListener.<init>(javafx.scene.Scene)-> 0
>>>>>>>>>>> javafx.scene.Scene.getAntiAliasingInternal()-> 2
>>>>>>>>>>>> javafx.scene.Scene.getAntiAliasingInternal()-> 0
>>>>>>>>>>>> javafx.application.Platform.isSupported(javafx.application.ConditionalFeature)-> 0
>>>>>>>>>>> javafx.scene.Scene$DropTargetListener.<init>(javafx.scene.Scene)-> 0
>>>>>>>>>>> javafx.scene.Scene$InputMethodRequestsDelegate.<init>(javafx.scene.Scene)-> 0
>>>>>>>>>>> javafx.scene.Scene.isDepthBufferInternal()-> 2
>>>>>>>>>>>> javafx.scene.Scene.isDepthBufferInternal()-> 0
>>>>>>>>>>>> javafx.application.Platform.isSupported(javafx.application.ConditionalFeature)-> 0
>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 2
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 0
>>>>>>>>>> javafx.stage.Stage.impl_visibleChanged(boolean)-> 9
>>>>>>>>>>> javafx.stage.Stage.impl_visibleChanged(boolean)-> 0
>>>>>>>>>>> javafx.stage.Window.impl_visibleChanged(boolean)-> 0
>>>>>>>>>>> javafx.stage.Stage.isResizable()-> 2
>>>>>>>>>>>> javafx.stage.Stage.isResizable()-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>> javafx.scene.image.Image.impl_getPlatformImage()-> 2
>>>>>>>>>>>> javafx.scene.image.Image.impl_getPlatformImage()-> 0
>>>>>>>>>>>> javafx.scene.image.Image$ObjectPropertyImpl.get()-> 0
>>>>>>>>>>> javafx.stage.Stage.isFullScreen()-> 0
>>>>>>>>>>> javafx.stage.Stage.isMaximized()-> 0
>>>>>>>>>>> javafx.stage.Stage.isAlwaysOnTop()-> 0
>>>>>>>>>>> javafx.stage.Stage.isIconified()-> 0
>>>>>>>>>>> javafx.stage.Stage.getTitle()-> 0
>>>>>>>>>> javafx.stage.Stage.impl_visibleChanging(boolean)-> 9
>>>>>>>>>>> javafx.stage.Stage.impl_visibleChanging(boolean)-> 0
>>>>>>>>>>> javafx.stage.Window.impl_visibleChanging(boolean)-> 4
>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 3
>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 5
>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>> javafx.stage.Window.getScene()-> 2
>>>>>>>>>>>>> javafx.stage.Window.getScene()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>> javafx.stage.Window.impl_visibleChanging(boolean)-> 0
>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 4
>>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 0
>>>>>>>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 2
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 4
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 3
>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 0
>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.findSubChange(int, java.util.List)-> 0
>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SubChange.<init>(int, int, java.util.List, int[], boolean)-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkState()-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkAddRemoveList()-> 0
>>>>>>>>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 0
>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 4
>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.finalizeSubChange(javafx.collections.ListChangeBuilder.SubChange)-> 0
>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 2
>>>>>>>>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>>>>>>> javafx.stage.Stage.getMinWidth()-> 0
>>>>>>>>>>> javafx.stage.Stage.getMaxHeight()-> 0
>>>>>>>>>>> javafx.stage.Stage.getMinHeight()-> 0
>>>>>>>>>>> javafx.stage.Stage.getMaxWidth()-> 0
>>>>>>>>>>> javafx.stage.Window.getScene()-> 2
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>> javafx.stage.Window.getScene()-> 0
>>>>>>>>>>> javafx.scene.Scene.getEffectiveNodeOrientation()-> 0
>>>>>>>>>> javafx.stage.Window$9.invalidated()-> 0
>>>>>>>>>> javafx.stage.Window.access$600(javafx.stage.Window, boolean)-> 2
>>>>>>>>>>> javafx.stage.Window.adjustSize(boolean)-> 6
>>>>>>>>>>>> javafx.stage.Window.applyBounds()-> 2
>>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.apply()-> 3
>>>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.apply()-> 0
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.reset()-> 0
>>>>>>>>>>>>> javafx.stage.Window.applyBounds()-> 0
>>>>>>>>>>>> javafx.stage.Window.adjustSize(boolean)-> 0
>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.setSize(double, double, double, double)-> 2
>>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.setSize(double, double, double, double)-> 0
>>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.setDirty()-> 0
>>>>>>>>>>>> javafx.stage.Window.getScene()-> 2
>>>>>>>>>>>>> javafx.stage.Window.getScene()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>> javafx.scene.Scene.getWidth()-> 2
>>>>>>>>>>>>> javafx.scene.Scene.getWidth()-> 0
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>> javafx.scene.Scene.getHeight()-> 2
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.scene.Scene.getHeight()-> 0
>>>>>>>>>>> javafx.stage.Window.access$600(javafx.stage.Window, boolean)-> 0
>>>>>>>>>> javafx.scene.Scene.setWidth(double)-> 3
>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>> javafx.scene.Scene$5.invalidated()-> 11
>>>>>>>>>>>>>> javafx.scene.Scene.resizeRootOnSceneSizeChange(double, double)-> 3
>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 3
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 6
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasMirroring()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasMirroring()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getAutomaticOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.invalidate()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.resizeRootOnSceneSizeChange(double, double)-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene$5.invalidated()-> 0
>>>>>>>>>>>>>> javafx.scene.Camera.setViewWidth(double)-> 2
>>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 3
>>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setNeedsRepaint()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Camera.setViewWidth(double)-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.geometry.Bounds.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getCamera()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getLayoutX()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getTranslateX()-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Region.isResizable()-> 0
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>> javafx.scene.Scene.widthPropertyImpl()-> 2
>>>>>>>>>>>> javafx.scene.Scene$5.<init>(javafx.scene.Scene)-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.<init>()-> 0
>>>>>>>>>>>>> javafx.scene.Scene$5.<init>(javafx.scene.Scene)-> 0
>>>>>>>>>>>> javafx.scene.Scene.widthPropertyImpl()-> 0
>>>>>>>>>>> javafx.scene.Scene.setWidth(double)-> 0
>>>>>>>>>> javafx.stage.Window.centerOnScreen()-> 7
>>>>>>>>>>> javafx.stage.Window.centerOnScreen()-> 0
>>>>>>>>>>> javafx.stage.Window.getWindowScreen()-> 4
>>>>>>>>>>>> javafx.stage.Window.getWindowScreen()-> 0
>>>>>>>>>>>> javafx.stage.Window.getX()-> 2
>>>>>>>>>>>>> javafx.stage.Window.getX()-> 0
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>> javafx.stage.Stage.getWindowOwner()-> 0
>>>>>>>>>>>> javafx.stage.Screen.getPrimary()-> 2
>>>>>>>>>>>>> javafx.stage.Screen.checkDirty()-> 0
>>>>>>>>>>>>> javafx.stage.Screen.getPrimary()-> 0
>>>>>>>>>>> javafx.stage.Window.applyBounds()-> 2
>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.apply()-> 2
>>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.apply()-> 0
>>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.reset()-> 0
>>>>>>>>>>>> javafx.stage.Window.applyBounds()-> 0
>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.setLocation(double, double, float, float)-> 2
>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.setDirty()-> 0
>>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.setLocation(double, double, float, float)-> 0
>>>>>>>>>>> javafx.stage.Window.getWidth()-> 2
>>>>>>>>>>>> javafx.stage.Window.getWidth()-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 2
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>> javafx.stage.Window.getHeight()-> 2
>>>>>>>>>>>> javafx.stage.Window.getHeight()-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>> javafx.scene.Scene.setHeight(double)-> 3
>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>> javafx.scene.Scene$6.invalidated()-> 10
>>>>>>>>>>>>>> javafx.scene.Camera.setViewHeight(double)-> 2
>>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 3
>>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setNeedsRepaint()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.markCameraDirty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Camera.markOwnerDirty()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Camera.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>> javafx.scene.Camera.setViewHeight(double)-> 0
>>>>>>>>>>>>>> javafx.scene.Scene$6.invalidated()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.resizeRootOnSceneSizeChange(double, double)-> 3
>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 3
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 6
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasMirroring()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getAutomaticOrientation(byte)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.hasMirroring()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_layoutBoundsChanged()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.invalidate()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setNeedsLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.resizeRootOnSceneSizeChange(double, double)-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.impl_computeLayoutBounds()-> 0
>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.geometry.Bounds.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double, double, double)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getWidth()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getHeight()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$12.computeBounds()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$LazyBoundsProperty.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getLayoutBounds()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveCamera()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getCamera()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getLayoutY()-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Region.isResizable()-> 0
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getTranslateY()-> 0
>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>> javafx.scene.Scene.heightPropertyImpl()-> 2
>>>>>>>>>>>> javafx.scene.Scene.heightPropertyImpl()-> 0
>>>>>>>>>>>> javafx.scene.Scene$6.<init>(javafx.scene.Scene)-> 2
>>>>>>>>>>>>> javafx.scene.Scene$6.<init>(javafx.scene.Scene)-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.<init>()-> 0
>>>>>>>>>>> javafx.scene.Scene.setHeight(double)-> 0
>>>>>>>>>> javafx.stage.Window.fireEvent(javafx.event.Event)-> 2
>>>>>>>>>>> javafx.event.Event.fireEvent(javafx.event.EventTarget, javafx.event.Event)-> 3
>>>>>>>>>>>> javafx.event.Event.fireEvent(javafx.event.EventTarget, javafx.event.Event)-> 0
>>>>>>>>>>>> javafx.stage.WindowEvent.getEventType()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>> javafx.stage.Window.fireEvent(javafx.event.Event)-> 0
>>>>>>>>>> javafx.stage.WindowEvent.<init>(javafx.stage.Window, javafx.event.EventType)-> 2
>>>>>>>>>>> javafx.stage.WindowEvent.<init>(javafx.stage.Window, javafx.event.EventType)-> 0
>>>>>>>>>>> javafx.event.Event.<init>(Object, javafx.event.EventTarget, javafx.event.EventType)-> 0
>>>>>>>>>> javafx.stage.Window.getScene()-> 2
>>>>>>>>>>> javafx.stage.Window.getScene()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>> javafx.stage.Window.getOpacity()-> 0
>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>> javafx.stage.Window.access$700()-> 0
>>>>>>>>>> javafx.scene.Scene.getHeight()-> 0
>>>>>>>>>> javafx.scene.Scene.getWidth()-> 0
>>>>>>>>>> javafx.stage.Window.applyBounds()-> 2
>>>>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.apply()-> 0
>>>>>>>>>>> javafx.stage.Window.applyBounds()-> 0
>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>> javafx.stage.Window.setShowing(boolean)-> 0
>>>>>> javafx.stage.Window.show()-> 0
>>>>> javafx.stage.Stage.show()-> 0
>>>> javafx.fxml.FXMLLoader.load()-> 2
>>>>> javafx.fxml.FXMLLoader.loadImpl(Class)-> 2
>>>>>> javafx.fxml.FXMLLoader.loadImpl(java.io.InputStream, Class)-> 9
>>>>>>> javafx.fxml.FXMLLoader.processStartElement()-> 4
>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processStartElement()-> 6
>>>>>>>>> javafx.fxml.FXMLLoader$InstanceDeclarationElement.constructValue()-> 19
>>>>>>>>>> javafx.fxml.FXMLLoader$InstanceDeclarationElement.constructValue()-> 0
>>>>>>>>>> javafx.fxml.JavaFXBuilderFactory.getBuilder(Class)-> 2
>>>>>>>>>>> javafx.fxml.JavaFXBuilderFactory.getBuilder(Class)-> 0
>>>>>>>>>>> javafx.fxml.JavaFXBuilderFactory.scanForConstructorAnnotations(Class)-> 0
>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 4
>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 9
>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 0
>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 2
>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 2
>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 2
>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.invalidate()-> 0
>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 0
>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>> javafx.scene.Node$16.invalidated()-> 2
>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>> javafx.scene.Node$16.invalidated()-> 0
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>> javafx.scene.Node.getInternalEventDispatcher()-> 2
>>>>>>>>>>> javafx.scene.Node.initializeInternalEventDispatcher()-> 3
>>>>>>>>>>>> javafx.scene.Node.createInternalEventDispatcher()-> 0
>>>>>>>>>>>> javafx.scene.Node.initializeInternalEventDispatcher()-> 0
>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>>> javafx.scene.Node.getInternalEventDispatcher()-> 0
>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>> javafx.css.StyleableBooleanProperty.set(boolean)-> 2
>>>>>>>>>>> javafx.css.StyleableBooleanProperty.set(boolean)-> 0
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>> javafx.scene.Node$16.invalidated()-> 2
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>> javafx.scene.Node$16.invalidated()-> 0
>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader.access$2100()-> 0
>>>>>>>>>> javafx.scene.control.Labeled.setMnemonicParsing(boolean)-> 3
>>>>>>>>>>> javafx.scene.control.Labeled.mnemonicParsingProperty()-> 2
>>>>>>>>>>>> javafx.scene.control.Labeled.mnemonicParsingProperty()-> 0
>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>> javafx.scene.control.Labeled.setMnemonicParsing(boolean)-> 0
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 2
>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 2
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 0
>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 2
>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$Element.processStartElement()-> 3
>>>>>>>>>> javafx.fxml.FXMLLoader$InstanceDeclarationElement.processAttribute(String, String, String)-> 2
>>>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processAttribute(String, String, String)-> 4
>>>>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processAttribute(String, String, String)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processAttribute(String, String, String)-> 2
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processAttribute(String, String, String)-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Attribute.<init>(String, Class, String)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader.setController(Object)-> 2
>>>>>>>>>>>>> javafx.fxml.FXMLLoader.setController(Object)-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.setController(Object)-> 2
>>>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.reset()-> 0
>>>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.setController(Object)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader.getClassLoader()-> 2
>>>>>>>>>>>>> javafx.fxml.FXMLLoader.getDefaultClassLoader(Class)-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader.getClassLoader()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$InstanceDeclarationElement.processAttribute(String, String, String)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processStartElement()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$2.getAttributePrefix(int)-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processValue()-> 3
>>>>>>>>>> javafx.fxml.FXMLLoader.compareJFXVersions(String, String)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processValue()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader.access$1502(javafx.fxml.FXMLLoader, Object)-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processStartElement()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$Element.processInstancePropertyAttributes()-> 2
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processPropertyAttribute(javafx.fxml.FXMLLoader.Attribute)-> 4
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processValue(Class, String, String)-> 4
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.applyProperty(String, Class, Object)-> 2
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.applyProperty(String, Class, Object)-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getProperties()-> 2
>>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isTyped()-> 0
>>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getProperties()-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processValue(Class, String, String)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.resolvePrefixedValue(String)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isTyped()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processPropertyAttribute(javafx.fxml.FXMLLoader.Attribute)-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isBindingExpression(String)-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isBidirectionalBindingExpression(String)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processInstancePropertyAttributes()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$Element.updateValue(Object)-> 0
>>>>>>>> javafx.fxml.FXMLLoader.createElement()-> 5
>>>>>>>>> javafx.fxml.FXMLLoader.getType(String)-> 2
>>>>>>>>>> javafx.fxml.FXMLLoader.loadTypeForPackage(String, String)-> 2
>>>>>>>>>>> javafx.fxml.FXMLLoader.loadTypeForPackage(String, String)-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader.getClassLoader()-> 2
>>>>>>>>>>>> javafx.fxml.FXMLLoader.getDefaultClassLoader(Class)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader.getClassLoader()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader.getType(String)-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.<init>(javafx.fxml.FXMLLoader, String, Class)-> 7
>>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.<init>(javafx.fxml.FXMLLoader, String, Class)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getProperties()-> 3
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getProperties()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getValueAdapter()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isTyped()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.<init>(javafx.fxml.FXMLLoader)-> 0
>>>>>>>>>> javafx.scene.layout.Pane.getChildren()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isTyped()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getValueAdapter()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.updateValue(Object)-> 0
>>>>>>>>> javafx.fxml.FXMLLoader.createElement()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$InstanceDeclarationElement.<init>(javafx.fxml.FXMLLoader, Class)-> 2
>>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.<init>(javafx.fxml.FXMLLoader, javafx.fxml.FXMLLoader.1)-> 2
>>>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.<init>(javafx.fxml.FXMLLoader)-> 2
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.<init>(javafx.fxml.FXMLLoader)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.<init>(javafx.fxml.FXMLLoader)-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.<init>(javafx.fxml.FXMLLoader, javafx.fxml.FXMLLoader.1)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$InstanceDeclarationElement.<init>(javafx.fxml.FXMLLoader, Class)-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$2.getPrefix()-> 0
>>>>>>>> javafx.fxml.FXMLLoader.processStartElement()-> 0
>>>>>>>> javafx.fxml.FXMLLoader$Element.processStartElement()-> 0
>>>>>>> javafx.fxml.FXMLLoader.processEndElement()-> 3
>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processEndElement()-> 8
>>>>>>>>> javafx.fxml.FXMLLoader$Element.processInstancePropertyAttributes()-> 2
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processPropertyAttribute(javafx.fxml.FXMLLoader.Attribute)-> 4
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processValue(Class, String, String)-> 5
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.applyProperty(String, Class, Object)-> 16
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.applyProperty(String, Class, Object)-> 0
>>>>>>>>>>>>> javafx.scene.control.Labeled.setText(String)-> 3
>>>>>>>>>>>>>> javafx.beans.property.StringProperty.setValue(String)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(Object)-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 3
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(String)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.setValue(String)-> 0
>>>>>>>>>>>>>> javafx.scene.control.Labeled.textProperty()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.SimpleStringProperty.<init>(Object, String, String)-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyStringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.StringExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.StringProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.StringPropertyBase.<init>(String)-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.SimpleStringProperty.<init>(Object, String, String)-> 0
>>>>>>>>>>>>>>> javafx.scene.control.Labeled.textProperty()-> 0
>>>>>>>>>>>>>> javafx.scene.control.Labeled.setText(String)-> 0
>>>>>>>>>>>>> javafx.scene.layout.HBox.setSpacing(double)-> 3
>>>>>>>>>>>>>> javafx.scene.layout.HBox.spacingProperty()-> 2
>>>>>>>>>>>>>>> javafx.scene.layout.HBox$1.<init>(javafx.scene.layout.HBox)-> 2
>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox$1.<init>(javafx.scene.layout.HBox)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.HBox.spacingProperty()-> 0
>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.set(double)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox$1.invalidated()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox$1.invalidated()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.set(double)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.HBox.setSpacing(double)-> 0
>>>>>>>>>>>>> javafx.scene.layout.VBox.setFillWidth(boolean)-> 3
>>>>>>>>>>>>>> javafx.scene.layout.VBox.fillWidthProperty()-> 2
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.fillWidthProperty()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox$3.<init>(javafx.scene.layout.VBox, boolean)-> 2
>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$3.<init>(javafx.scene.layout.VBox, boolean)-> 0
>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.set(boolean)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$3.invalidated()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$3.invalidated()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>> javafx.css.StyleableBooleanProperty.set(boolean)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.VBox.setFillWidth(boolean)-> 0
>>>>>>>>>>>>> javafx.scene.layout.VBox.setAlignment(javafx.geometry.Pos)-> 3
>>>>>>>>>>>>>> javafx.scene.layout.VBox.alignmentProperty()-> 2
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.alignmentProperty()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox$2.<init>(javafx.scene.layout.VBox, javafx.geometry.Pos)-> 2
>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$2.<init>(javafx.scene.layout.VBox, javafx.geometry.Pos)-> 0
>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$2.invalidated()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$2.invalidated()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.VBox.setAlignment(javafx.geometry.Pos)-> 0
>>>>>>>>>>>>> javafx.scene.layout.VBox.setSpacing(double)-> 3
>>>>>>>>>>>>>> javafx.scene.layout.VBox.spacingProperty()-> 2
>>>>>>>>>>>>>>> javafx.scene.layout.VBox.spacingProperty()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.VBox$1.<init>(javafx.scene.layout.VBox)-> 2
>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$1.<init>(javafx.scene.layout.VBox)-> 0
>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.set(double)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$1.invalidated()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$1.invalidated()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>>>>>>>>>> javafx.css.StyleableDoubleProperty.set(double)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.VBox.setSpacing(double)-> 0
>>>>>>>>>>>>> javafx.scene.control.Button.setCancelButton(boolean)-> 3
>>>>>>>>>>>>>> javafx.scene.control.Button.cancelButtonProperty()-> 2
>>>>>>>>>>>>>>> javafx.scene.control.Button$2.<init>(javafx.scene.control.Button, boolean)-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.scene.control.Button$2.<init>(javafx.scene.control.Button, boolean)-> 0
>>>>>>>>>>>>>>> javafx.scene.control.Button.cancelButtonProperty()-> 0
>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>> javafx.scene.control.Button$2.invalidated()-> 4
>>>>>>>>>>>>>>>>> javafx.scene.control.Button$2.invalidated()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.pseudoClassStateChanged(javafx.css.PseudoClass, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Button.access$100()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>> javafx.scene.control.Button.setCancelButton(boolean)-> 0
>>>>>>>>>>>>> javafx.scene.control.Button.setDefaultButton(boolean)-> 3
>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>> javafx.scene.control.Button$1.invalidated()-> 4
>>>>>>>>>>>>>>>>> javafx.scene.control.Button$1.invalidated()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.control.Button.access$000()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.pseudoClassStateChanged(javafx.css.PseudoClass, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>> javafx.scene.control.Button.defaultButtonProperty()-> 2
>>>>>>>>>>>>>>> javafx.scene.control.Button.defaultButtonProperty()-> 0
>>>>>>>>>>>>>>> javafx.scene.control.Button$1.<init>(javafx.scene.control.Button, boolean)-> 2
>>>>>>>>>>>>>>>> javafx.scene.control.Button$1.<init>(javafx.scene.control.Button, boolean)-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>>>>>>>>>>> javafx.scene.control.Button.setDefaultButton(boolean)-> 0
>>>>>>>>>>>>> javafx.scene.layout.HBox.setAlignment(javafx.geometry.Pos)-> 3
>>>>>>>>>>>>>> javafx.scene.layout.HBox.alignmentProperty()-> 2
>>>>>>>>>>>>>>> javafx.scene.layout.HBox$2.<init>(javafx.scene.layout.HBox, javafx.geometry.Pos)-> 2
>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.<init>(Object)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox$2.<init>(javafx.scene.layout.HBox, javafx.geometry.Pos)-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.HBox.alignmentProperty()-> 0
>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox$2.invalidated()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox$2.invalidated()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>>>>> javafx.scene.layout.HBox.setAlignment(javafx.geometry.Pos)-> 0
>>>>>>>>>>>>> javafx.scene.control.Labeled.setMnemonicParsing(boolean)-> 3
>>>>>>>>>>>>>> javafx.scene.control.Labeled.setMnemonicParsing(boolean)-> 0
>>>>>>>>>>>>>> javafx.scene.control.Labeled.mnemonicParsingProperty()-> 0
>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>> javafx.geometry.Pos.valueOf(String)-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getProperties()-> 3
>>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getProperties()-> 0
>>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isTyped()-> 0
>>>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getValueAdapter()-> 0
>>>>>>>>>>>>> javafx.scene.layout.Region.setMaxHeight(double)-> 2
>>>>>>>>>>>>>> javafx.scene.layout.Region.setMaxHeight(double)-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>> javafx.scene.layout.Region.setMaxWidth(double)-> 2
>>>>>>>>>>>>>> javafx.scene.layout.Region.setMaxWidth(double)-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>> javafx.scene.layout.Region.setMinHeight(double)-> 2
>>>>>>>>>>>>>> javafx.scene.layout.Region.setMinHeight(double)-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>> javafx.scene.layout.Region.setMinWidth(double)-> 2
>>>>>>>>>>>>>> javafx.scene.layout.Region.setMinWidth(double)-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processValue(Class, String, String)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.resolvePrefixedValue(String)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getValueAdapter()-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isTyped()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processPropertyAttribute(javafx.fxml.FXMLLoader.Attribute)-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isBindingExpression(String)-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isBidirectionalBindingExpression(String)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processInstancePropertyAttributes()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.add(Object)-> 4
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.add(Object)-> 29
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>> javafx.scene.Node$1.invalidated()-> 13
>>>>>>>>>>>>>> javafx.scene.Node.access$500(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.updateDisabled()-> 5
>>>>>>>>>>>>>>>> javafx.scene.Node.setDisabled(boolean)-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node$8.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$8.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.setDisabled(boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.updateDisabled()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.isDisable()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.access$500(javafx.scene.Node)-> 0
>>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 3
>>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 4
>>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 5
>>>>>>>>>>>>>>>>> javafx.scene.Node.getMirroringOrientationParent()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getMirroringOrientationParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.usesMirroring()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.usesMirroring()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getAutomaticOrientation(byte)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 4
>>>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.disabledProperty()-> 3
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper, javafx.beans.property.ReadOnlyBooleanWrapper.1)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper)-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper, javafx.beans.property.ReadOnlyBooleanWrapper.1)-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.disabledProperty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node$8.<init>(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$8.<init>(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.disabledPropertyImpl()-> 0
>>>>>>>>>>>>>> javafx.scene.Node$1.invalidated()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.computeDerivedDepthTest()-> 3
>>>>>>>>>>>>>>> javafx.scene.Node.computeDerivedDepthTest()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getDepthTest()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.access$600(javafx.scene.Node, boolean)-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 7
>>>>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.access$600(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.notifyAccessibleAttributeChanged(javafx.scene.AccessibleAttribute)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.access$700(javafx.scene.Node)-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.access$700(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.add(Object)-> 0
>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 2
>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 3
>>>>>>>>>>>>> javafx.scene.Node.transformedBoundsChanged()-> 0
>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 2
>>>>>>>>>>>>>> javafx.scene.Node.notifyParentOfBoundsChange()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_geomChanged()-> 0
>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 2
>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>> javafx.scene.layout.HBox.requestLayout()-> 0
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 2
>>>>>>>>>>>> javafx.scene.Node.impl_markDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>> javafx.scene.Node.access$600(javafx.scene.Node, boolean)-> 2
>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 7
>>>>>>>>>>>>> javafx.scene.Node.updateTreeVisible(boolean)-> 0
>>>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 2
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>> javafx.scene.Node.setTreeVisible(boolean)-> 0
>>>>>>>>>>>> javafx.scene.Node.access$600(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>> javafx.scene.Parent.childIncluded(javafx.scene.Node)-> 2
>>>>>>>>>>>> javafx.scene.Parent.setChildDirty(javafx.scene.Node, boolean)-> 0
>>>>>>>>>>>> javafx.scene.Parent.childIncluded(javafx.scene.Node)-> 0
>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 2
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 3
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>> javafx.scene.Node.isDisable()-> 0
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>> javafx.scene.Node.isVisible()-> 0
>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>> javafx.scene.Node.getEffectiveOrientation(byte)-> 0
>>>>>>>>>>> javafx.scene.Node.getAutomaticOrientation(byte)-> 0
>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.add(Object)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isTyped()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getValueAdapter()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$Element.processEventHandlerAttributes()-> 5
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getControllerMethodHandle(String, javafx.fxml.FXMLLoader.SupportedType[])-> 3
>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.getControllerMethods()-> 4
>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.addAccessibleMembers(Class, int, int, int)-> 5
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.addAccessibleMembers(Class, int, int, int)-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.getAccess(int)-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor$1.<init>(javafx.fxml.FXMLLoader.ControllerAccessor, int, Class, int)-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$SupportedType.values()-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.addAccessibleMembers(Class, int, int, int)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.getControllerMethods()-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader.access$3800()-> 2
>>>>>>>>>>>>> javafx.fxml.FXMLLoader.access$3800()-> 0
>>>>>>>>>>>>> javafx.fxml.FXMLLoader.checkAllPermissions()-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$SupportedType.values()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getControllerMethodHandle(String, javafx.fxml.FXMLLoader.SupportedType[])-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$MethodHandler.<init>(Object, java.lang.reflect.Method, javafx.fxml.FXMLLoader.SupportedType, javafx.fxml.FXMLLoader.1)-> 2
>>>>>>>>>>>> javafx.fxml.FXMLLoader$MethodHandler.<init>(Object, java.lang.reflect.Method, javafx.fxml.FXMLLoader.SupportedType, javafx.fxml.FXMLLoader.1)-> 0
>>>>>>>>>>>> javafx.fxml.FXMLLoader$MethodHandler.<init>(Object, java.lang.reflect.Method, javafx.fxml.FXMLLoader.SupportedType)-> 0
>>>>>>>>>> javafx.scene.control.ButtonBase.setOnAction(javafx.event.EventHandler)-> 2
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>> javafx.scene.control.ButtonBase$2.invalidated()-> 3
>>>>>>>>>>>>>> javafx.scene.control.ButtonBase.access$100(javafx.scene.control.ButtonBase, javafx.event.EventType, javafx.event.EventHandler)-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.setEventHandler(javafx.event.EventType, javafx.event.EventHandler)-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.setEventHandler(javafx.event.EventType, javafx.event.EventHandler)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getInternalEventDispatcher()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.initializeInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>> javafx.scene.control.ButtonBase.access$100(javafx.scene.control.ButtonBase, javafx.event.EventType, javafx.event.EventHandler)-> 0
>>>>>>>>>>>>>> javafx.scene.control.ButtonBase$2.invalidated()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>> javafx.scene.control.ButtonBase.setOnAction(javafx.event.EventHandler)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.processEventHandlerAttributes()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerMethodEventHandler.<init>(javafx.fxml.FXMLLoader.MethodHandler)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getValueAdapter()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.set(Object)-> 4
>>>>>>>>>> javafx.scene.layout.Region.setPadding(javafx.geometry.Insets)-> 2
>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 2
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>>> javafx.scene.layout.Region$2.invalidated()-> 4
>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.fireValueChanged()-> 3
>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$200(javafx.scene.layout.Region)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.updateSnappedInsets()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getBorder()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getPadding()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.getInsets()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.updateSnappedInsets()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.Region.access$200(javafx.scene.layout.Region)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.Region$InsetsProperty.fireValueChanged()-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestParentLayout()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Region$2.invalidated()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.geometry.Insets.equals(Object)-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>> javafx.css.StyleableObjectProperty.set(Object)-> 0
>>>>>>>>>>> javafx.scene.layout.Region.setPadding(javafx.geometry.Insets)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.set(Object)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getProperties()-> 3
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getProperties()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isTyped()-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$Element.getValueAdapter()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.updateValue(Object)-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processEndElement()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.isCollection()-> 2
>>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.isCollection()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$Element.isCollection()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$Element.updateValue(Object)-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$ValueElement.processValue()-> 0
>>>>>>>> javafx.fxml.FXMLLoader.processEndElement()-> 0
>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.processEndElement()-> 3
>>>>>>>>> javafx.fxml.FXMLLoader$PropertyElement.processEndElement()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$Element.processInstancePropertyAttributes()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader$Element.processEventHandlerAttributes()-> 0
>>>>>>> javafx.fxml.FXMLLoader.loadImpl(java.io.InputStream, Class)-> 0
>>>>>>> javafx.fxml.FXMLLoader.processProcessingInstruction()-> 2
>>>>>>>> javafx.fxml.FXMLLoader.processImport()-> 2
>>>>>>>>> javafx.fxml.FXMLLoader.processImport()-> 0
>>>>>>>>> javafx.fxml.FXMLLoader.importPackage(String)-> 0
>>>>>>>> javafx.fxml.FXMLLoader.processProcessingInstruction()-> 0
>>>>>>> javafx.fxml.FXMLLoader.processCharacters()-> 0
>>>>>>> javafx.fxml.FXMLLoader.clearImports()-> 0
>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.setCallerClass(Class)-> 0
>>>>>>> javafx.fxml.FXMLLoader$2.<init>(javafx.fxml.FXMLLoader, javax.xml.stream.XMLStreamReader)-> 0
>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.reset()-> 0
>>>>>> javafx.fxml.FXMLLoader.loadImpl(Class)-> 0
>>>>> javafx.fxml.FXMLLoader.load()-> 0
>>>> javafx.scene.Scene.<init>(javafx.scene.Parent)-> 2
>>>>> javafx.scene.Scene.<init>(javafx.scene.Parent, double, double, javafx.scene.paint.Paint, boolean, javafx.scene.SceneAntialiasing)-> 12
>>>>>> javafx.scene.Scene.setRoot(javafx.scene.Parent)-> 3
>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>> javafx.scene.Scene$9.invalidated()-> 11
>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 5
>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 14
>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 5
>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 4
>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 4
>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 10
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getControlCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties.access$2800()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getControlCssMetaData()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 0
>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getCssMetaData()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox$StyleableProperties.access$600()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.HBox.getCssMetaData()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.<init>()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 2
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 9
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Control.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getControlCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getControlCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.control.Labeled$StyleableProperties.access$2800()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>>> javafx.scene.layout.Pane.getChildren()-> 0
>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 9
>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.createStyleHelper(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 2
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 3
>>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getCssMetaData()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getClassCssMetaData()-> 2
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox$StyleableProperties.access$600()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getClassCssMetaData()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.layout.VBox.getCssMetaData()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper$CacheContainer.<init>(javafx.scene.Node, com.sun.javafx.css.StyleMap, int, javafx.scene.CssStyleHelper.1)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.canReuseStyleHelper(javafx.scene.Node, com.sun.javafx.css.StyleMap)-> 0
>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 2
>>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.updateParentTriggerStates(javafx.css.Styleable, int, com.sun.javafx.css.PseudoClassState[])-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getStyleableParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.CssStyleHelper.<init>()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.reapplyCss()-> 0
>>>>>>>>>>>>>> javafx.scene.layout.Pane.getChildren()-> 0
>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 5
>>>>>>>>>>>>>> javafx.scene.Node.notifyParentsOfInvalidatedCSS()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirty(com.sun.javafx.scene.DirtyBits)-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>> javafx.scene.Parent.scenesChanged(javafx.scene.Scene, javafx.scene.SubScene, javafx.scene.Scene, javafx.scene.SubScene)-> 4
>>>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 5
>>>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 12
>>>>>>>>>>>>>>> javafx.scene.Parent.scenesChanged(javafx.scene.Scene, javafx.scene.SubScene, javafx.scene.Scene, javafx.scene.SubScene)-> 4
>>>>>>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 5
>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 13
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.initializeInternalEventDispatcher()-> 3
>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.initializeInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.createInternalEventDispatcher()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.setFocusDirty(boolean)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Parent.scenesChanged(javafx.scene.Scene, javafx.scene.SubScene, javafx.scene.Scene, javafx.scene.SubScene)-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.Parent.scenesChanged(javafx.scene.Scene, javafx.scene.SubScene, javafx.scene.Scene, javafx.scene.SubScene)-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 3
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.addToDirtyList(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Parent.scenesChanged(javafx.scene.Scene, javafx.scene.SubScene, javafx.scene.Scene, javafx.scene.SubScene)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 3
>>>>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.addToDirtyList(javafx.scene.Node)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 4
>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 3
>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>> javafx.scene.Parent.scenesChanged(javafx.scene.Scene, javafx.scene.SubScene, javafx.scene.Scene, javafx.scene.SubScene)-> 0
>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>> javafx.scene.Node.isManaged()-> 0
>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 3
>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 4
>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 5
>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveNodeOrientation()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Scene.calcEffectiveNodeOrientation()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Scene.calcEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 6
>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getMirroringOrientationParent()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getMirroringOrientationParent()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.usesMirroring()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>> javafx.scene.Node.invalidatedScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 4
>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 3
>>>>>>>>>>>>>> javafx.scene.Node.impl_isTreeVisible()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.impl_treeVisibleProperty()-> 0
>>>>>>>>>>>>>> javafx.scene.Node$TreeVisiblePropertyReadOnly.get()-> 0
>>>>>>>>>>>>> javafx.scene.Node.updateCanReceiveFocus()-> 0
>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 2
>>>>>>>>>>>>>> javafx.scene.Node.isDisabled()-> 0
>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 3
>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 2
>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.scene.Node.focusSetDirty(javafx.scene.Scene)-> 0
>>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 3
>>>>>>>>>>>>> javafx.scene.Node.addToSceneDirtyList()-> 0
>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>> javafx.scene.Scene.addToDirtyList(javafx.scene.Node)-> 0
>>>>>>>>>>>> javafx.scene.Node.getClip()-> 0
>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 3
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>> javafx.scene.Node$ReadOnlyObjectWrapperManualFire.fireSuperValueChangedEvent()-> 0
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>> javafx.scene.Node.isFocusTraversable()-> 0
>>>>>>>>>>>> javafx.scene.Node.impl_isDirtyEmpty()-> 0
>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 2
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 2
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyObjectWrapper, javafx.beans.property.ReadOnlyObjectWrapper.1)-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>> javafx.scene.Node.sceneProperty()-> 0
>>>>>>>>>>> javafx.scene.Node.setScenes(javafx.scene.Scene, javafx.scene.SubScene, boolean)-> 0
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 4
>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 4
>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 2
>>>>>>>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Node.impl_reapplyCSS()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 2
>>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 0
>>>>>>>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.finalizeSubChange(javafx.collections.ListChangeBuilder.SubChange)-> 0
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>>>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>>>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 2
>>>>>>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 4
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 3
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.findSubChange(int, java.util.List)-> 0
>>>>>>>>>>>>>> javafx.collections.ListChangeBuilder$SubChange.<init>(int, int, java.util.List, int[], boolean)-> 0
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 0
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkState()-> 0
>>>>>>>>>>>>> javafx.collections.ListChangeBuilder.checkAddRemoveList()-> 0
>>>>>>>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 0
>>>>>>>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 0
>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>>>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>>>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>>>>>>>> javafx.scene.Scene$9.invalidated()-> 0
>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 3
>>>>>>>>>>> javafx.scene.layout.Region.resize(double, double)-> 0
>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 2
>>>>>>>>>>>> javafx.scene.layout.Region.heightChanged(double)-> 0
>>>>>>>>>>>> javafx.scene.layout.Region.setHeight(double)-> 0
>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 2
>>>>>>>>>>>> javafx.scene.layout.Region.setWidth(double)-> 0
>>>>>>>>>>>> javafx.scene.layout.Region.widthChanged(double)-> 0
>>>>>>>>>> javafx.scene.Scene.access$1100(javafx.scene.Scene, javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 2
>>>>>>>>>>>> javafx.scene.Scene.markDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>>> javafx.scene.Scene.setDirty(javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>>> javafx.scene.Scene.access$1100(javafx.scene.Scene, javafx.scene.Scene.DirtyBits)-> 0
>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 2
>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 3
>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 2
>>>>>>>>>>>>> javafx.scene.Parent.markDirtyLayout(boolean)-> 0
>>>>>>>>>>>>> javafx.scene.Parent.setLayoutFlag(com.sun.javafx.scene.LayoutFlags)-> 0
>>>>>>>>>>>> javafx.scene.Parent.requestLayout()-> 0
>>>>>>>>>>>> javafx.scene.Parent.clearSizeCache()-> 0
>>>>>>>>>>> javafx.scene.layout.VBox.requestLayout()-> 0
>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>> javafx.scene.Scene.getWidth()-> 0
>>>>>>>>>> javafx.scene.Scene.getHeight()-> 0
>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>> javafx.scene.Scene.rootProperty()-> 2
>>>>>>>> javafx.scene.Scene$9.<init>(javafx.scene.Scene)-> 2
>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>> javafx.scene.Scene$9.<init>(javafx.scene.Scene)-> 0
>>>>>>>> javafx.scene.Scene.rootProperty()-> 0
>>>>>>> javafx.scene.Scene.setRoot(javafx.scene.Parent)-> 0
>>>>>> javafx.scene.Scene.init()-> 3
>>>>>>> javafx.scene.Scene$ClickGenerator.<init>()-> 3
>>>>>>>> javafx.scene.Scene$ClickGenerator.<init>()-> 0
>>>>>>>> javafx.scene.input.MouseButton.values()-> 0
>>>>>>>> javafx.scene.Scene$ClickCounter.<init>()-> 0
>>>>>>> javafx.scene.Scene$MouseHandler.<init>(javafx.scene.Scene)-> 3
>>>>>>>> javafx.scene.Scene$MouseHandler.<init>(javafx.scene.Scene)-> 0
>>>>>>>> javafx.scene.Scene$MouseHandler$1.<init>(javafx.scene.Scene.MouseHandler)-> 0
>>>>>>>> javafx.scene.Scene$TargetWrapper.<init>(javafx.scene.Scene.1)-> 2
>>>>>>>>> javafx.scene.Scene$TargetWrapper.<init>()-> 0
>>>>>>>>> javafx.scene.Scene$TargetWrapper.<init>(javafx.scene.Scene.1)-> 0
>>>>>>> javafx.scene.Scene.init()-> 0
>>>>>> javafx.scene.Scene.<init>(javafx.scene.Parent, double, double, javafx.scene.paint.Paint, boolean, javafx.scene.SceneAntialiasing)-> 0
>>>>>> javafx.scene.Scene$13.<init>(javafx.scene.Scene, Object, String)-> 2
>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>(Object, String)-> 2
>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 2
>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 0
>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>(Object, String)-> 0
>>>>>>> javafx.scene.Scene$13.<init>(javafx.scene.Scene, Object, String)-> 0
>>>>>> javafx.scene.Scene.setFill(javafx.scene.paint.Paint)-> 3
>>>>>>> javafx.scene.Scene.fillProperty()-> 2
>>>>>>>> javafx.scene.Scene.fillProperty()-> 0
>>>>>>>> javafx.scene.Scene$8.<init>(javafx.scene.Scene, javafx.scene.paint.Paint)-> 2
>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>> javafx.scene.Scene$8.<init>(javafx.scene.Scene, javafx.scene.paint.Paint)-> 0
>>>>>>> javafx.scene.Scene.setFill(javafx.scene.paint.Paint)-> 0
>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 2
>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>> javafx.scene.Scene$11.<init>(javafx.scene.Scene)-> 0
>>>>>> javafx.scene.Scene$TouchMap.<init>(javafx.scene.Scene.1)-> 2
>>>>>>> javafx.scene.Scene$TouchMap.<init>()-> 0
>>>>>>> javafx.scene.Scene$TouchMap.<init>(javafx.scene.Scene.1)-> 0
>>>>>> javafx.scene.Scene$TouchGesture.<init>(javafx.scene.Scene.1)-> 2
>>>>>>> javafx.scene.Scene$TouchGesture.<init>(javafx.scene.Scene.1)-> 0
>>>>>>> javafx.scene.Scene$TouchGesture.<init>()-> 0
>>>>>> javafx.scene.Scene$ScenePulseListener.<init>(javafx.scene.Scene)-> 0
>>>>>> javafx.scene.Scene$TargetWrapper.<init>(javafx.scene.Scene.1)-> 2
>>>>>>> javafx.scene.Scene$TargetWrapper.<init>(javafx.scene.Scene.1)-> 0
>>>>>>> javafx.scene.Scene$TargetWrapper.<init>()-> 0
>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double)-> 2
>>>>>>> javafx.geometry.BoundingBox.<init>(double, double, double, double)-> 0
>>>>>>> javafx.geometry.Bounds.<init>(double, double, double, double, double, double)-> 0
>>>>>> javafx.scene.Scene.init(double, double)-> 0
>>>>> javafx.scene.Scene.<init>(javafx.scene.Parent)-> 0
>>>> javafx.scene.image.Image.<init>(String)-> 4
>>>>> javafx.scene.image.Image.initialize(Object)-> 3
>>>>>> javafx.scene.image.Image.loadImage(String, double, double, boolean, boolean)-> 0
>>>>>> javafx.scene.image.Image.finishImage(com.sun.javafx.tk.ImageLoader)-> 3
>>>>>>> javafx.scene.image.Image.setPlatformImageWH(com.sun.javafx.tk.PlatformImage, double, double)-> 10
>>>>>>>> javafx.scene.image.Image.storePlatformImageWH(com.sun.javafx.tk.PlatformImage, double, double)-> 4
>>>>>>>>> javafx.scene.image.Image.platformImagePropertyImpl()-> 2
>>>>>>>>>> javafx.scene.image.Image$ObjectPropertyImpl.<init>(javafx.scene.image.Image, String)-> 2
>>>>>>>>>>> javafx.scene.image.Image$ObjectPropertyImpl.<init>(javafx.scene.image.Image, String)-> 0
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>> javafx.scene.image.Image.platformImagePropertyImpl()-> 0
>>>>>>>>> javafx.scene.image.Image.widthPropertyImpl()-> 2
>>>>>>>>>> javafx.scene.image.Image$DoublePropertyImpl.<init>(javafx.scene.image.Image, String)-> 2
>>>>>>>>>>> javafx.scene.image.Image$DoublePropertyImpl.<init>(javafx.scene.image.Image, String)-> 0
>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>> javafx.scene.image.Image.widthPropertyImpl()-> 0
>>>>>>>>> javafx.scene.image.Image.storePlatformImageWH(com.sun.javafx.tk.PlatformImage, double, double)-> 0
>>>>>>>>> javafx.scene.image.Image.heightPropertyImpl()-> 2
>>>>>>>>>> javafx.scene.image.Image.heightPropertyImpl()-> 0
>>>>>>>>>> javafx.scene.image.Image$DoublePropertyImpl.<init>(javafx.scene.image.Image, String)-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.<init>()-> 0
>>>>>>>>>>> javafx.scene.image.Image$DoublePropertyImpl.<init>(javafx.scene.image.Image, String)-> 0
>>>>>>>> javafx.scene.image.Image.setPlatformImageWH(com.sun.javafx.tk.PlatformImage, double, double)-> 0
>>>>>>>> javafx.scene.image.Image$DoublePropertyImpl.fireValueChangedEvent()-> 2
>>>>>>>>> javafx.beans.property.ReadOnlyDoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>> javafx.scene.image.Image$DoublePropertyImpl.fireValueChangedEvent()-> 0
>>>>>>>> javafx.scene.image.Image.impl_getPlatformImage()-> 0
>>>>>>>> javafx.scene.image.Image$ObjectPropertyImpl.fireValueChangedEvent()-> 2
>>>>>>>>> javafx.beans.property.ReadOnlyObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>> javafx.scene.image.Image$ObjectPropertyImpl.fireValueChangedEvent()-> 0
>>>>>>>> javafx.scene.image.Image.getWidth()-> 0
>>>>>>>> javafx.scene.image.Image.getHeight()-> 0
>>>>>>>> javafx.scene.image.Image.platformImagePropertyImpl()-> 0
>>>>>>>> javafx.scene.image.Image.widthPropertyImpl()-> 0
>>>>>>>> javafx.scene.image.Image.heightPropertyImpl()-> 0
>>>>>>> javafx.scene.image.Image.setProgress(double)-> 3
>>>>>>>> javafx.scene.image.Image.progressPropertyImpl()-> 2
>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.<init>(Object, String)-> 2
>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String)-> 2
>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String)-> 0
>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.<init>(Object, String)-> 0
>>>>>>>>> javafx.scene.image.Image.progressPropertyImpl()-> 0
>>>>>>>> javafx.scene.image.Image.setProgress(double)-> 0
>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 3
>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 2
>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>> javafx.beans.property.DoublePropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>> javafx.beans.property.DoublePropertyBase.markInvalid()-> 0
>>>>>>>>> javafx.beans.property.DoublePropertyBase.set(double)-> 0
>>>>>>>>> javafx.beans.property.DoublePropertyBase.isBound()-> 0
>>>>>>> javafx.scene.image.Image.finishImage(com.sun.javafx.tk.ImageLoader)-> 0
>>>>>> javafx.scene.image.Image.initialize(Object)-> 0
>>>>> javafx.scene.image.Image.validateUrl(String)-> 0
>>>>> javafx.scene.image.Image.<init>(String)-> 0
>>>>> javafx.scene.image.Image.<init>(String, java.io.InputStream, double, double, boolean, boolean, boolean)-> 0
>>>> javafx.stage.Stage.setScene(javafx.scene.Scene)-> 2
>>>>> javafx.stage.Window.setScene(javafx.scene.Scene)-> 2
>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>> javafx.stage.Window$SceneModel.invalidated()-> 6
>>>>>>>>> javafx.scene.Scene.impl_setWindow(javafx.stage.Window)-> 2
>>>>>>>>>> javafx.scene.Scene.setWindow(javafx.stage.Window)-> 3
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 3
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 3
>>>>>>>>>>>>> javafx.scene.Scene$4.invalidated()-> 6
>>>>>>>>>>>>>> javafx.scene.Scene.access$700(javafx.scene.Scene)-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.getKeyHandler()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Scene$KeyHandler.<init>(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getKeyHandler()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.access$700(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.access$500(javafx.scene.Scene)-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.parentEffectiveOrientationInvalidated()-> 3
>>>>>>>>>>>>>>>> javafx.scene.Scene.sceneEffectiveOrientationInvalidated()-> 3
>>>>>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 3
>>>>>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 4
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 5
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveNodeOrientation()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.calcEffectiveNodeOrientation()-> 3
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.calcEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 2
>>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 0
>>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getOrientationParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.nodeResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 3
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.impl_transformsChanged()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToParentTransform()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.invalidateLocalToSceneTransform()-> 0
>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 6
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.calcAutomaticNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.usesMirroring()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getMirroringOrientationParent()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getParent()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getMirroringOrientationParent()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.scene.Node.getScene()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getEffectiveNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.getNodeOrientation()-> 0
>>>>>>>>>>>>>>>>>> javafx.scene.Node.parentResolvedOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.sceneEffectiveOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getRoot()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.parentEffectiveOrientationInvalidated()-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene.getNodeOrientation()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.access$500(javafx.scene.Scene)-> 0
>>>>>>>>>>>>>> javafx.scene.Scene$KeyHandler.access$800(javafx.scene.Scene.KeyHandler, javafx.stage.Window, javafx.stage.Window)-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene$KeyHandler.windowForSceneChanged(javafx.stage.Window, javafx.stage.Window)-> 5
>>>>>>>>>>>>>>>> javafx.scene.Scene$KeyHandler.windowForSceneChanged(javafx.stage.Window, javafx.stage.Window)-> 0
>>>>>>>>>>>>>>>> javafx.scene.Scene$KeyHandler.setWindowFocused(boolean)-> 2
>>>>>>>>>>>>>>>>> javafx.scene.Scene$KeyHandler.setWindowFocused(boolean)-> 0
>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 2
>>>>>>>>>>>>>>>>>> javafx.scene.Scene.getFocusOwner()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>>>> javafx.stage.Window.focusedProperty()-> 2
>>>>>>>>>>>>>>>>> javafx.stage.Window.focusedProperty()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.getReadOnlyProperty()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper, javafx.beans.property.ReadOnlyBooleanWrapper.1)-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper)-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper)-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.<init>(javafx.beans.property.ReadOnlyBooleanWrapper, javafx.beans.property.ReadOnlyBooleanWrapper.1)-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.getReadOnlyProperty()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanPropertyBase.addListener(javafx.beans.InvalidationListener)-> 0
>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 2
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper$ReadOnlyPropertyImpl.get()-> 0
>>>>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.getValue()-> 0
>>>>>>>>>>>>>>>> javafx.stage.Window.isFocused()-> 2
>>>>>>>>>>>>>>>>> javafx.stage.Window.isFocused()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene$KeyHandler.access$800(javafx.scene.Scene.KeyHandler, javafx.stage.Window, javafx.stage.Window)-> 0
>>>>>>>>>>>>>> javafx.scene.Scene$4.invalidated()-> 0
>>>>>>>>>>>>>> javafx.scene.Scene.impl_initPeer()-> 2
>>>>>>>>>>>>>>> javafx.scene.Scene.impl_initPeer()-> 0
>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 2
>>>>>>>>>>>>>>>> javafx.scene.Scene.getWindow()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>>>>>>> javafx.scene.Scene.windowPropertyImpl()-> 2
>>>>>>>>>>>> javafx.scene.Scene$4.<init>(javafx.scene.Scene)-> 2
>>>>>>>>>>>>> javafx.scene.Scene$4.<init>(javafx.scene.Scene)-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 2
>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 0
>>>>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 0
>>>>>>>>>>>> javafx.scene.Scene.windowPropertyImpl()-> 0
>>>>>>>>>>> javafx.scene.Scene.setWindow(javafx.stage.Window)-> 0
>>>>>>>>>> javafx.scene.Scene.impl_setWindow(javafx.stage.Window)-> 0
>>>>>>>>> javafx.stage.Window$SceneModel.invalidated()-> 0
>>>>>>>>> javafx.stage.Window$SceneModel.updatePeerScene(com.sun.javafx.tk.TKScene)-> 0
>>>>>>>>> javafx.stage.Window.isShowing()-> 2
>>>>>>>>>> javafx.stage.Window.isShowing()-> 0
>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>>>>>>>>> javafx.beans.property.ObjectPropertyBase.get()-> 0
>>>>>>>>> javafx.scene.Scene.getWindow()-> 0
>>>>>>>> javafx.beans.property.ObjectPropertyBase.markInvalid()-> 0
>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 2
>>>>>>>>> javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent()-> 0
>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.fireValueChangedEvent()-> 0
>>>>>>> javafx.beans.property.ObjectPropertyBase.isBound()-> 0
>>>>>>> javafx.beans.property.ObjectPropertyBase.set(Object)-> 0
>>>>>> javafx.stage.Window.setScene(javafx.scene.Scene)-> 0
>>>>> javafx.stage.Stage.setScene(javafx.scene.Scene)-> 0
>>>> javafx.stage.Stage.<init>()-> 2
>>>>> javafx.stage.Stage.<init>(javafx.stage.StageStyle)-> 5
>>>>>> javafx.stage.Window.<init>()-> 9
>>>>>>> javafx.stage.Window.<init>()-> 0
>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.<init>(Object, String, double)-> 2
>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String, double)-> 2
>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 2
>>>>>>>>>> javafx.beans.property.DoublePropertyBase.<init>(double)-> 0
>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.binding.NumberExpressionBase.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.binding.DoubleExpression.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ReadOnlyDoubleProperty.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.DoubleProperty.<init>()-> 0
>>>>>>>>> javafx.beans.property.SimpleDoubleProperty.<init>(Object, String, double)-> 0
>>>>>>>> javafx.beans.property.ReadOnlyDoubleWrapper.<init>(Object, String, double)-> 0
>>>>>>> javafx.stage.Window$SceneModel.<init>(javafx.stage.Window, javafx.stage.Window.1)-> 2
>>>>>>>> javafx.stage.Window$SceneModel.<init>(javafx.stage.Window)-> 2
>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 2
>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 2
>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String)-> 0
>>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>()-> 0
>>>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>()-> 0
>>>>>>>>> javafx.stage.Window$SceneModel.<init>(javafx.stage.Window)-> 0
>>>>>>>> javafx.stage.Window$SceneModel.<init>(javafx.stage.Window, javafx.stage.Window.1)-> 0
>>>>>>> javafx.stage.Window.initializeInternalEventDispatcher()-> 3
>>>>>>>> javafx.stage.Window.initializeInternalEventDispatcher()-> 0
>>>>>>>> javafx.stage.Window.createInternalEventDispatcher()-> 0
>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>> javafx.stage.Window$TKBoundsConfigurator.<init>(javafx.stage.Window)-> 2
>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.<init>(javafx.stage.Window)-> 0
>>>>>>>> javafx.stage.Window$TKBoundsConfigurator.reset()-> 0
>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>(Object)-> 2
>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 2
>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object)-> 0
>>>>>>>> javafx.beans.property.ReadOnlyObjectWrapper.<init>(Object)-> 0
>>>>>>> javafx.stage.Screen.getPrimary()-> 2
>>>>>>>> javafx.stage.Screen.getPrimary()-> 0
>>>>>>>> javafx.stage.Screen.checkDirty()-> 0
>>>>>>> javafx.stage.Window$2.<init>(javafx.stage.Window)-> 2
>>>>>>>> javafx.stage.Window$2.<init>(javafx.stage.Window)-> 0
>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 2
>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 2
>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 0
>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 0
>>>>>>> javafx.stage.Window$9.<init>(javafx.stage.Window)-> 2
>>>>>>>> javafx.stage.Window$9.<init>(javafx.stage.Window)-> 0
>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 2
>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 2
>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 2
>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 2
>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String)-> 0
>>>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>()-> 0
>>>>>>>>> javafx.beans.property.ReadOnlyBooleanWrapper.<init>()-> 0
>>>>>> javafx.stage.Stage.<init>(javafx.stage.StageStyle)-> 0
>>>>>> javafx.stage.Stage$4.<init>(javafx.stage.Stage)-> 0
>>>>>> javafx.stage.Stage.initStyle(javafx.stage.StageStyle)-> 0
>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 2
>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 2
>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 2
>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 2
>>>>>>>>>> javafx.beans.binding.ObjectExpression.<init>()-> 0
>>>>>>>>>> javafx.beans.property.ReadOnlyObjectProperty.<init>()-> 0
>>>>>>>>> javafx.beans.property.ObjectProperty.<init>()-> 0
>>>>>>>> javafx.beans.property.ObjectPropertyBase.<init>(Object)-> 0
>>>>>>> javafx.beans.property.SimpleObjectProperty.<init>(Object, String, Object)-> 0
>>>>> javafx.stage.Stage.<init>()-> 0
>>>> Controllers.FileTabPaneController.promptSaveDialog(javafx.scene.control.Tab)-> 0
>>>> javafx.stage.Stage.setResizable(boolean)-> 3
>>>>> javafx.stage.Stage.resizableProperty()-> 2
>>>>>> javafx.stage.Stage.resizableProperty()-> 0
>>>>>> javafx.stage.Stage$ResizableProperty.<init>(javafx.stage.Stage)-> 2
>>>>>>> javafx.stage.Stage$ResizableProperty.<init>(javafx.stage.Stage)-> 0
>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String, boolean)-> 2
>>>>>>>> javafx.beans.property.SimpleBooleanProperty.<init>(Object, String, boolean)-> 0
>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 2
>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 2
>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 2
>>>>>>>>>>> javafx.beans.binding.BooleanExpression.<init>()-> 0
>>>>>>>>>>> javafx.beans.property.ReadOnlyBooleanProperty.<init>()-> 0
>>>>>>>>>> javafx.beans.property.BooleanProperty.<init>()-> 0
>>>>>>>>> javafx.beans.property.BooleanPropertyBase.<init>(boolean)-> 0
>>>>> javafx.stage.Stage.setResizable(boolean)-> 0
>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 3
>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 3
>>>>>>> javafx.stage.Stage$ResizableProperty.invalidated()-> 0
>>>>>>> javafx.beans.property.BooleanPropertyBase.markInvalid()-> 0
>>>>>>> javafx.beans.property.BooleanPropertyBase.fireValueChangedEvent()-> 0
>>>>>> javafx.beans.property.BooleanPropertyBase.set(boolean)-> 0
>>>>>> javafx.beans.property.BooleanPropertyBase.isBound()-> 0
>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL)-> 2
>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle)-> 2
>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle, javafx.util.BuilderFactory)-> 2
>>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle, javafx.util.BuilderFactory, javafx.util.Callback)-> 2
>>>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle, javafx.util.BuilderFactory, javafx.util.Callback, java.nio.charset.Charset)-> 2
>>>>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle, javafx.util.BuilderFactory, javafx.util.Callback, java.nio.charset.Charset, java.util.LinkedList)-> 4
>>>>>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle, javafx.util.BuilderFactory, javafx.util.Callback, java.nio.charset.Charset, java.util.LinkedList)-> 0
>>>>>>>>>> javafx.collections.FXCollections.observableHashMap()-> 2
>>>>>>>>>>> javafx.collections.FXCollections.observableHashMap()-> 0
>>>>>>>>>>> javafx.collections.FXCollections.observableMap(java.util.Map)-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.<init>(javafx.fxml.FXMLLoader.1)-> 2
>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.<init>(javafx.fxml.FXMLLoader.1)-> 0
>>>>>>>>>>> javafx.fxml.FXMLLoader$ControllerAccessor.<init>()-> 0
>>>>>>>>>> javafx.fxml.FXMLLoader.setCharset(java.nio.charset.Charset)-> 0
>>>>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle, javafx.util.BuilderFactory, javafx.util.Callback, java.nio.charset.Charset)-> 0
>>>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle, javafx.util.BuilderFactory, javafx.util.Callback)-> 0
>>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle, javafx.util.BuilderFactory)-> 0
>>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL, java.util.ResourceBundle)-> 0
>>>>> javafx.fxml.FXMLLoader.<init>(java.net.URL)-> 0
>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 4
>>>>> javafx.collections.ObservableListBase.endChange()-> 2
>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 2
>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 4
>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 2
>>>>>>>>> javafx.collections.ObservableListBase.fireChange(javafx.collections.ListChangeListener.Change)-> 0
>>>>>>>>> javafx.scene.image.Image.impl_getPlatformImage()-> 2
>>>>>>>>>> javafx.scene.image.Image.impl_getPlatformImage()-> 0
>>>>>>>>>> javafx.scene.image.Image$ObjectPropertyImpl.get()-> 0
>>>>>>>> javafx.collections.ListChangeBuilder.commit()-> 0
>>>>>>>> javafx.collections.ListChangeBuilder.finalizeSubChange(javafx.collections.ListChangeBuilder.SubChange)-> 0
>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 2
>>>>>>>>> javafx.collections.ListChangeListener$Change.<init>(javafx.collections.ObservableList)-> 0
>>>>>>>>> javafx.collections.ListChangeBuilder$SingleChange.<init>(javafx.collections.ListChangeBuilder.SubChange, javafx.collections.ObservableListBase)-> 0
>>>>>>> javafx.collections.ListChangeBuilder.endChange()-> 0
>>>>>> javafx.collections.ObservableListBase.endChange()-> 0
>>>>> javafx.collections.ModifiableObservableListBase.add(int, Object)-> 0
>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 2
>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 4
>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 3
>>>>>>>> javafx.collections.ListChangeBuilder.insertAdd(int, int)-> 0
>>>>>>>> javafx.collections.ListChangeBuilder.findSubChange(int, java.util.List)-> 0
>>>>>>>> javafx.collections.ListChangeBuilder$SubChange.<init>(int, int, java.util.List, int[], boolean)-> 0
>>>>>>> javafx.collections.ListChangeBuilder.nextAdd(int, int)-> 0
>>>>>>> javafx.collections.ListChangeBuilder.checkAddRemoveList()-> 0
>>>>>>> javafx.collections.ListChangeBuilder.checkState()-> 0
>>>>>> javafx.collections.ObservableListBase.nextAdd(int, int)-> 0
>>>>> javafx.collections.ObservableListBase.beginChange()-> 2
>>>>>> javafx.collections.ObservableListBase.beginChange()-> 0
>>>>>> javafx.collections.ListChangeBuilder.beginChange()-> 0
>>>> Models.SaveDialog.<init>(javafx.stage.Stage, javafx.scene.control.Tab, Controllers.FileTabPaneController)-> 0
>>>> javafx.stage.Stage.initModality(javafx.stage.Modality)-> 0
>>> Controllers.FileTabPaneController.closeTabsAndExit()-> 0
>>> Controllers.FileTabPaneController.getFileTabController(javafx.scene.control.Tab)-> 2
>>>> Controllers.FileTabPaneController.getFileTabController(javafx.scene.control.Tab)-> 0
>>>> Models.FileTabPane.getFileTabControllerMap()-> 0
>>> javafx.application.Platform.exit()-> 0
>>> Models.FileTab.getSavedState()-> 2
>>>> Models.FileTab.getSavedState()-> 0
>>>> javafx.beans.property.BooleanPropertyBase.get()-> 0
>> Main.SimpleTextEditor.closeAllTabs()-> 0
> Main.SimpleTextEditor.lambda$onCloseEvent$0(javafx.stage.WindowEvent)-> 0
> javafx.event.Event.consume()-> 0
